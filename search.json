[{"path":"http://kamapu.github.io/vegtable/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Alvarez. Author, maintainer.","code":""},{"path":"http://kamapu.github.io/vegtable/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alvarez M (2023). vegtable: Handling Vegetation Data Sets. R package version 0.1.8.9003,  http://kamapu.github.io/vegtable/, https://github.com/kamapu/vegtable.","code":"@Manual{,   title = {vegtable: Handling Vegetation Data Sets},   author = {Miguel Alvarez},   year = {2023},   note = {R package version 0.1.8.9003,  http://kamapu.github.io/vegtable/},   url = {https://github.com/kamapu/vegtable}, }"},{"path":"http://kamapu.github.io/vegtable/index.html","id":"vegtable","dir":"","previous_headings":"","what":"Handling Vegetation Data Sets","title":"Handling Vegetation Data Sets","text":"aim vegtable provide way handling databases stored Turboveg. package incorporates many concepts functions included package vegdata defining homonymous S4 class containing elements database just one object. package vegtable also contains several methods object class. Species lists vegtable objects handled package taxlist, thus recommend take look . package developed tool handling data stored SWEA-Dataveg. development running context project GlobE-wetlands. important source inspiration vegtable enthusiastic discussions several versions Meetings Vegetation Databases.","code":""},{"path":"http://kamapu.github.io/vegtable/index.html","id":"updating-to-the-last-version-of-vegtable","dir":"","previous_headings":"","what":"Updating to the last version of vegtable","title":"Handling Vegetation Data Sets","text":"first step install package devtools dependencies. just need execute following commands R-session:","code":"library(devtools) install_github(\"kamapu/vegtable\")"},{"path":"http://kamapu.github.io/vegtable/index.html","id":"some-examples","dir":"","previous_headings":"","what":"Some examples","title":"Handling Vegetation Data Sets","text":"current version vegtable includes example data, corresponds subset SWEA-Dataveg. data set contains plot observations done Kenya imported 5 sources. Among others, object contains plot observations done Aberdare National Park (Kenya) Schmitt (1991). can make subset including plots classified mentioned author Juniperus procera-Podocarpus latifolius community (IDs 780 798). geo-referenced plot observations, can use coordinates produce map distribution plots using package leaflet.","code":"library(vegtable) #> Loading required package: taxlist #>  #> Attaching package: 'taxlist' #> The following objects are masked from 'package:base': #>  #>     levels, print #>  #> Attaching package: 'vegtable' #> The following object is masked from 'package:base': #>  #>     transform data(Kenya_veg)  # validate and explore validObject(Kenya_veg) #> [1] TRUE summary(Kenya_veg) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 9501 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 1946  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE JPcomm <- subset(Kenya_veg, ReleveID %in% c(780:798)) summary(JPcomm) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 717.4 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 19  #>    plots with records: 19  #>    variables in header: 17  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE library(leaflet) leaflet(JPcomm@header) %>%         addTiles() %>%         addCircleMarkers(lng = ~LONGITUDE, lat = ~LATITUDE, color = \"red\",                 opacity = 0.3, radius = 1)"},{"path":"http://kamapu.github.io/vegtable/index.html","id":"further-readings","dir":"","previous_headings":"","what":"Further readings","title":"Handling Vegetation Data Sets","text":"Basics work vegetation-plots vegtable Introduction package vegtable vegtable: R object vegetation-plot data sets","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Select or replace elements in objects — Extract","title":"Select or replace elements in objects — Extract","text":"Methods quick access slot header vegtable objects access single cover scales coverconvert objects. Also replacement methods implemented.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select or replace elements in objects — Extract","text":"","code":"# S4 method for vegtable $(x, name)  # S4 method for vegtable,ANY $(x, name) <- value  # S4 method for coverconvert $(x, name)  # S4 method for coverconvert [(x, i)  # S4 method for coverconvert,coverconvert $(x, name) <- value  # S4 method for vegtable [(x, i, j, ..., drop = FALSE)  # S4 method for vegtable [(x, i, j) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/Extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select or replace elements in objects — Extract","text":"x Object class vegtable. name name access. value Either vectors list, used replacement. , j Indices access. ... arguments passed methods. drop logical value passed Extract.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select or replace elements in objects — Extract","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select or replace elements in objects — Extract","text":"","code":"## Range of latitude values in database range(Kenya_veg$LATITUDE) #> [1] -1.880917  2.668861  ## Summary of countries summary(Kenya_veg$COUNTRY) #>      KE      AD      AE      AF      AG      AI      AL      AM      AN      AO  #>    1946       0       0       0       0       0       0       0       0       0  #>      AQ      AR      AS      AT      AU      AW      AZ      BA      BB      BD  #>       0       0       0       0       0       0       0       0       0       0  #>      BE      BF      BG      BH      BI      BJ      BM      BN      BO      BR  #>       0       0       0       0       0       0       0       0       0       0  #>      BS      BT      BV      BW      BY      BZ      CA      CC      CF      CD  #>       0       0       0       0       0       0       0       0       0       0  #>      CG      CH      CI      CK      CL      CM      CN      CO      CR      CS  #>       0       0       0       0       0       0       0       0       0       0  #>      CU      CV      CX      CY      CZ      DE      DJ      DK      DM      DO  #>       0       0       0       0       0       0       0       0       0       0  #>      DZ      EC      EE      EG      EH      ER      ES      ET      FI      FJ  #>       0       0       0       0       0       0       0       0       0       0  #>      FK      FM      FO      FR      FX      GA      GB      GD      GE      GF  #>       0       0       0       0       0       0       0       0       0       0  #>      GH      GI      GL      GM      GN      GP      GQ      GR      GS      GT  #>       0       0       0       0       0       0       0       0       0       0  #>      GU      GW      GY      HK      HM      HN      HR      HT      HU (Other)  #>       0       0       0       0       0       0       0       0       0       0  summary(droplevels(Kenya_veg$COUNTRY)) #>   KE  #> 1946   ## First 5 samples summary(Kenya_veg[1:5, ]) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 683.5 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 5  #>    plots with records: 5  #>    variables in header: 11  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Vegetation-plots from Kenya — Kenya_veg-data","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"subset http://www.givd.info/ID/AF-00-006SWEA-Dataveg including five references providing plots collected Kenya.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"","code":"Kenya_veg"},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"object class vegtable.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"http://www.givd.info/ID/AF-00-006","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"Bronner G (1990). Vegetation land use Mathews Range area, Samburu-District, Kenya. J. Cramer, Berlin. Bussmann RW (1994). forests Mount Kenya -- vegetation, ecology, destruction management tropical mountain forest ecosystem. Universität Bayreuth. Bussmann RW (2002). Islands desert -- forest vegetation Kenya's smaller mountains highland areas. Journal East African Natural History 91: 27--79. Fujiwara K, Furukawa T, Kiboi SK, Mathenge S, Mutiso P, Hayashi H, Meguro S (2014). Forest types biodiversity around Great Rift Valley Kenya. Contributii Botanice 49: 143--178. Schmitt K (1991). vegetation Aberdare National Park Kenya. Universitätsverlag Wagner, Innsbruck.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"Miguel Alvarez kamapu78@gmail.com Michael Curran currmi01@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Kenya_veg-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vegetation-plots from Kenya — Kenya_veg-data","text":"","code":"summary(Kenya_veg) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 9501 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 1946  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Vegetation-plots from Tanzania — Wetlands-data","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"subset http://www.givd.info/ID/AF-00-006SWEA-Dataveg plots sampled Tanzania.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"","code":"Wetlands"},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"object class shaker (Wetlands) respective companion vegtable object (Wetlands_veg).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"http://www.givd.info/ID/AF-00-006.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"Alvarez M (2017). Classification aquatic semi-aquatic vegetation two East African sites: Cocktail definitions syntaxonomy. Phytocoenologia.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/Wetlands-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vegetation-plots from Tanzania — Wetlands-data","text":"","code":"summary(Wetlands) #> Number of pseudo-species: 0  #> Number of species groups: 6  #> Number of formulas: 9  summary(Wetlands_veg) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 350.6 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 100  #>    plots with records: 100  #>    variables in header: 24  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 417  #>    taxon concepts: 96  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/add_releves.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge relevés from data frames into vegtable objects — add_releves","title":"Merge relevés from data frames into vegtable objects — add_releves","text":"Addition plot observations existing data sets may implicate merging data frames vegtable objects. Since function update slots samples header, consistency slots layers, relations species checked accordingly updated advance.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/add_releves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge relevés from data frames into vegtable objects — add_releves","text":"","code":"add_releves(vegtable, releves, ...)  # S4 method for vegtable,data.frame add_releves(   vegtable,   releves,   header,   abundance,   split_string,   usage_ids = FALSE,   layers = FALSE,   layers_var,   format = \"crosstable\",   preserve_ids = FALSE,   ... )  add_releves(vegtable, ...) <- value  # S4 method for vegtable,data.frame add_releves(vegtable, ...) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/add_releves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge relevés from data frames into vegtable objects — add_releves","text":"vegtable object class vegtable. releves data frame including plot observations added vegtable. ... arguments passed function cross2db() (.e. na_strings). header data frame (optional) including header information plots. abundance character value (vector length 2) indicating names abundance variable vegtable. split_string Character value used split mixed abundance codes. usage_ids Logical value indicating whether species taxon usage ids (integers) names releves. layers Logical value indicating whether layers included releves . layers_var Name layer variable vegtable. format Character value indicating input format releves (either \"crosstable\" \"databaselist\"). preserve_ids logical value, whether IDs input data set used ReleveID . IDs integers one already exists vegtable, error retrieved. value data frame containing new plot observations. passed parameter 'releves' replace method.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/add_releves.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge relevés from data frames into vegtable objects — add_releves","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/aspect_conv-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of aspect classes to azimuth — aspect_conv-data","title":"Conversion of aspect classes to azimuth — aspect_conv-data","text":"Conversion table required transform values aspect azimuth degrees.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/aspect_conv-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of aspect classes to azimuth — aspect_conv-data","text":"","code":"aspect_conv"},{"path":"http://kamapu.github.io/vegtable/reference/aspect_conv-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Conversion of aspect classes to azimuth — aspect_conv-data","text":"numeric vector values degrees symbols used names.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/aspect_conv-data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conversion of aspect classes to azimuth — aspect_conv-data","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/aspect_conv-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of aspect classes to azimuth — aspect_conv-data","text":"","code":"aspect_conv[c(\"N\", \"S\", \"ENE\", \"SSW\")] #>     N     S   ENE   SSW  #>   0.0 180.0  67.5 202.5"},{"path":"http://kamapu.github.io/vegtable/reference/braun_blanquet-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of Braun-Blanquet codes to cover percentage — braun_blanquet-data","title":"Conversion of Braun-Blanquet codes to cover percentage — braun_blanquet-data","text":"Cover values conversion coverconvert object. Object class coverconvert contains conversion tables usually categorical variable (cover scale) numerical one (equivalent percentage cover value). Cover values stored range level scale (minimum maximum cover value).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/braun_blanquet-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of Braun-Blanquet codes to cover percentage — braun_blanquet-data","text":"","code":"braun_blanquet"},{"path":"http://kamapu.github.io/vegtable/reference/braun_blanquet-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Conversion of Braun-Blanquet codes to cover percentage — braun_blanquet-data","text":"object class coverconvert.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/braun_blanquet-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of Braun-Blanquet codes to cover percentage — braun_blanquet-data","text":"","code":"names(braun_blanquet) #> [1] \"br_bl\"  \"b_bbds\" \"ordin.\" summary(braun_blanquet) #> ## Number of cover scales: 3  #>  #> * scale 'br_bl':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4      2   5 - 25 #> 5      3  25 - 50 #> 6      4  50 - 75 #> 7      5 75 - 100 #>  #> * scale 'b_bbds':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4     2m    1 - 5 #> 5     2a   5 - 15 #> 6     2b  15 - 25 #> 7      3  25 - 50 #> 8      4  50 - 75 #> 9      5 75 - 100 #>  #> * scale 'ordin.':  #>   Levels    Range #> 1      1    0 - 1 #> 2      2    0 - 1 #> 3      3    1 - 5 #> 4      4    1 - 5 #> 5      5   5 - 15 #> 6      6  15 - 25 #> 7      7  25 - 50 #> 8      8  50 - 75 #> 9      9 75 - 100 #>  summary(braun_blanquet$b_bbds) #> ## Number of cover scales: 1  #>  #> * scale 'b_bbds':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4     2m    1 - 5 #> 5     2a   5 - 15 #> 6     2b  15 - 25 #> 7      3  25 - 50 #> 8      4  50 - 75 #> 9      5 75 - 100 #>"},{"path":"http://kamapu.github.io/vegtable/reference/check_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of arguments for statistics — check_args","title":"Check validity of arguments for statistics — check_args","text":"Check validity arguments functions trait_stats() trait_proportion().","code":""},{"path":"http://kamapu.github.io/vegtable/reference/check_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of arguments for statistics — check_args","text":"","code":"check_args(   object,   trait,   head_var,   weight,   taxon_levels,   merge_to,   trait_levels )"},{"path":"http://kamapu.github.io/vegtable/reference/clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean orphaned records in vegtable object — clean","title":"Clean orphaned records in vegtable object — clean","text":"Delete entries slots header species orphaned manipulation slots. Orphaned records generated modifications slots may cause loss validity vegtable objects. function applied optimise allocated size vegtable object, well. Since running cleaning assure deletion orphaned entries, recommended run least twice. repetition cleaning controlled argument times.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean orphaned records in vegtable object — clean","text":"","code":"clean_once(object)  # S4 method for vegtable clean(object, times = 2, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean orphaned records in vegtable object — clean","text":"object vegtable object. times Numeric value indicating many times cleaning repeated. ... arguments passed methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean orphaned records in vegtable object — clean","text":"clean vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/clean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clean orphaned records in vegtable object — clean","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean orphaned records in vegtable object — clean","text":"","code":"## Create an invalid object veg <- Kenya_veg veg@header <- veg@header[1:10, ]  ## Resolve invalidity veg <- clean(veg)"},{"path":"http://kamapu.github.io/vegtable/reference/coerce-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce objects to lists — as","title":"Coerce objects to lists — as","text":"Coerce vegtable objects list every slot component list. way allows explore content solve problems validity checks fail. Coercion applied different classes vegtable.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/coerce-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce objects to lists — as","text":"","code":"# S4 method for vegtable as.list(x, ...)  # S4 method for coverconvert as.list(x, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/coerce-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce objects to lists — as","text":"x object coerced. ... arguments passed methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/coerce-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce objects to lists — as","text":"object class list.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/coerce-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce objects to lists — as","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/coerce-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce objects to lists — as","text":"","code":"## vegtable as list veg <- as(Kenya_veg, \"list\") names(veg) #> [1] \"description\"  \"samples\"      \"layers\"       \"header\"       \"species\"      #> [6] \"relations\"    \"coverconvert\" \"syntax\"        ## coverconvert as list as(Kenya_veg@coverconvert, \"list\") #> $br_bl #>   value bottom top #> 1     r      0   1 #> 2     +      0   1 #> 3     1      1   5 #> 4     2      5  25 #> 5     3     25  50 #> 6     4     50  75 #> 7     5     75 100 #>  #> $b_bbds #>   value bottom top #> 1     r      0   1 #> 2     +      0   1 #> 3     1      1   5 #> 4    2m      1   5 #> 5    2a      5  15 #> 6    2b     15  25 #> 7     3     25  50 #> 8     4     50  75 #> 9     5     75 100 #>  #> $ordin. #>   value bottom top #> 1     1      0   1 #> 2     2      0   1 #> 3     3      1   5 #> 4     4      1   5 #> 5     5      5  15 #> 6     6     15  25 #> 7     7     25  50 #> 8     8     50  75 #> 9     9     75 100 #>"},{"path":"http://kamapu.github.io/vegtable/reference/count_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Count taxa included in vegtable objects — count_taxa","title":"Count taxa included in vegtable objects — count_taxa","text":"Counting number taxa within taxlist objects character vectors containing taxon names. function provides quick calculation taxa vegtable objects, considering records slot samples. records can also merged lower ranks. formula method, units without requested taxa appear output data frame. taxa occurring requested level unit, error message retrieved.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/count_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count taxa included in vegtable objects — count_taxa","text":"","code":"# S4 method for vegtable,missing count_taxa(object, level, include_lower = FALSE, ...)  # S4 method for formula,vegtable count_taxa(   object,   data,   include_lower = FALSE,   suffix = \"_count\",   in_header = TRUE,   ... )  count_taxa(data, ...) <- value  # S4 method for vegtable,formula count_taxa(data, ...) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/count_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count taxa included in vegtable objects — count_taxa","text":"object object class vegtable formula. level Character value indicating taxonomic rank counted taxa. include_lower Logical value, whether lower taxonomic ranks included requested level. ... arguments passed among methods. data object class vegtable. suffix Character value used suffix calculated variable. in_header Logical value, whether result included slot header input vegtable object . formula term related categorical variable header, result inserted respective table slot relations. value formula passed parameter 'object' replace method.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/count_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count taxa included in vegtable objects — count_taxa","text":"data frame number taxa requested level requested units formula method, just integer value.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/count_taxa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count taxa included in vegtable objects — count_taxa","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/count_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count taxa included in vegtable objects — count_taxa","text":"","code":"## Different alternatives count_taxa(Kenya_veg) #> [1] 1573 head(count_taxa(~ReleveID, Kenya_veg, in_header = FALSE)) #>   ReleveID taxa_count #> 1      358         58 #> 2      359         50 #> 3      360         50 #> 4      361         64 #> 5      362         68 #> 6      363         67 head(count_taxa(species ~ ReleveID, Kenya_veg, in_header = FALSE)) #>   ReleveID species_count #> 1      358            55 #> 2      359            48 #> 3      360            46 #> 4      361            60 #> 5      362            63 #> 6      363            63 head(count_taxa(species ~ ReleveID, Kenya_veg, TRUE, in_header = FALSE)) #>   ReleveID species_count #> 1      358            55 #> 2      359            48 #> 3      360            46 #> 4      361            60 #> 5      362            64 #> 6      363            64 head(count_taxa(family ~ ReleveID, Kenya_veg, TRUE)) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 660.1 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1  #>    plots with records: 1  #>    variables in header: 12  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/cover_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cover scales to percent cover — cover_trans","title":"Convert cover scales to percent cover — cover_trans","text":"Convert values categorical cover scale percentage values. function requires input coverconvert object contains conversion tables.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/cover_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cover scales to percent cover — cover_trans","text":"","code":"# S4 method for character,coverconvert cover_trans(x, conversion, from = NULL, rule = \"top\", zeroto = 0.1, ...)  # S4 method for factor,coverconvert cover_trans(x, conversion, ...)  # S4 method for numeric,coverconvert cover_trans(x, conversion, ...)  # S4 method for vegtable,missing cover_trans(x, to, replace = FALSE, rule = \"top\", zeroto = 0.1, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/cover_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cover scales to percent cover — cover_trans","text":"x Either factor character vector, vegtable object. conversion object class vegtable. Scale name values x character value. rule character value indicating rule applied cover transformation. Three rules implemented transformation, either top (values transformed top range), middle (transformation midpoint), bottom (conversion lowest value range). later case, bottom zero cover, fictive bottom value can set 'zeroto' zeroto Value set transformation classes bottom 0% cover. ... arguments passed methods. Name column slot samples writing converted values. replace Logical value indicating whether existing cover values replaced new computed values .","code":""},{"path":"http://kamapu.github.io/vegtable/reference/cover_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cover scales to percent cover — cover_trans","text":"Either vector vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/cover_trans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert cover scales to percent cover — cover_trans","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/cover_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert cover scales to percent cover — cover_trans","text":"","code":"## Check the available scales summary(Kenya_veg@coverconvert) #> ## Number of cover scales: 3  #>  #> * scale 'br_bl':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4      2   5 - 25 #> 5      3  25 - 50 #> 6      4  50 - 75 #> 7      5 75 - 100 #>  #> * scale 'b_bbds':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4     2m    1 - 5 #> 5     2a   5 - 15 #> 6     2b  15 - 25 #> 7      3  25 - 50 #> 8      4  50 - 75 #> 9      5 75 - 100 #>  #> * scale 'ordin.':  #>   Levels    Range #> 1      1    0 - 1 #> 2      2    0 - 1 #> 3      3    1 - 5 #> 4      4    1 - 5 #> 5      5   5 - 15 #> 6      6  15 - 25 #> 7      7  25 - 50 #> 8      8  50 - 75 #> 9      9 75 - 100 #>   ## Conversion by default 'top' rule Kenya_veg <- cover_trans(Kenya_veg, to = \"percent\") summary(as.factor(Kenya_veg@samples$percent)) #>     1     5    15    25    50    75   100  #> 55943  9269  1158  4846  2004   841   480   ## Conversion by 'middle' rule Kenya_veg <- cover_trans(Kenya_veg, to = \"percent\", rule = \"middle\", replace = TRUE) summary(as.factor(Kenya_veg@samples$percent)) #>   0.5     3    10    15    20  37.5  62.5  87.5  #> 55943  9269  1158  4364   482  2004   841   480   ## Conversion by 'bottom' rule Kenya_veg <- cover_trans(Kenya_veg, to = \"percent\", rule = \"bottom\", replace = TRUE) summary(as.factor(Kenya_veg@samples$percent)) #>   0.1     1     5    15    25    50    75  #> 55943  9269  5522   482  2004   841   480"},{"path":"http://kamapu.github.io/vegtable/reference/coverconvert.html","id":null,"dir":"Reference","previous_headings":"","what":"Cover conversion tables — coverconvert","title":"Cover conversion tables — coverconvert","text":"Cover conversion tables vegtable objects. class implements conversions different cover scales percentage cover. transformations percentage cover, function cover_trans() used.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/coverconvert.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Cover conversion tables — coverconvert","text":"value List containing levels scale. conversion List respective start end cut levels scale levels.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/coverconvert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cover conversion tables — coverconvert","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating cross tables from database lists — crosstable","title":"Generating cross tables from database lists — crosstable","text":"cross table common format required statistical packages used analyse vegetation data (e.g. vegan). may use convenience formula 'abundance ~ plot + species + ...'. Additional variables used rows (...) can instance layers. objects class vegtable, formula can also include variables species list (example AcceptedName, AuthorName) even taxon traits. required, tables already formatted cross tables can converted column-oriented tables using function cross2db().","code":""},{"path":"http://kamapu.github.io/vegtable/reference/crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating cross tables from database lists — crosstable","text":"","code":"crosstable(formula, data, ...)  # S4 method for formula,data.frame crosstable(   formula,   data,   FUN,   na_to_zero = FALSE,   use_nas = TRUE,   as_matrix = FALSE,   ... )  # S4 method for formula,vegtable crosstable(   formula,   data,   FUN,   level,   include_lower = FALSE,   na_to_zero = FALSE,   use_nas = TRUE,   ... )  cross2db(object, layers = FALSE, na_strings)"},{"path":"http://kamapu.github.io/vegtable/reference/crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating cross tables from database lists — crosstable","text":"formula formula indicating variables used cross table. formula can represented 'abundance ~ cols + rows', 'abundance' numeric variable quantified row column, instance abundance species plot. variables can set additional rows indices cross table. data Either data frame object class vegtable. ... arguments passed function stats::aggregate(). FUN Function used aggregate values case multiple occurrence species plot, instance. na_to_zero logical value indicating whether zeros inserted empty cells . use_nas Logical value indicating whether NAs considered levels categorical variables . as_matrix logical value, whether output done matrix data frame. level character vector taxonomic ranks (levels) requested cross table. include_lower logical value indicating wether lower value requested levels merged . works 'level' missing. Note like include higher ranks rankless taxa cross table, rahter need run merge_taxa() slot species. object data frame including cross table. layers Logical value, whether cross table includes layer column . na_strings Character vector indicating records cross table.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/crosstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating cross tables from database lists — crosstable","text":"object class data.frame.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/crosstable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generating cross tables from database lists — crosstable","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating cross tables from database lists — crosstable","text":"","code":"# Produce a subset veg <- subset(Kenya_veg, REFERENCE == 2331, slot = \"header\")  ## transform cover to percentage veg <- cover_trans(veg, to = \"cover_perc\", rule = \"middle\")  ## cross table of the first 5 plots Cross <- crosstable(cover_perc ~ ReleveID + AcceptedName + AuthorName,   data = veg[1:5, ], FUN = mean, na_to_zero = TRUE) head(Cross) #>               AcceptedName                AuthorName 1940 1937 1938 1939 1941 #> 1      Commiphora africana          (A. Rich.) Engl.  0.5    0    0    0  0.0 #> 2     Eragrostis macilenta         (A. Rich.) Steud.  3.0    3    3    3  0.0 #> 3       Helinus mystacinus (Aiton) E. Mey. ex Steud.  0.0    0    0    0  3.0 #> 4   Eragrostis cilianensis        (All.) F. T. Hubb.  3.0    3    3    3  3.0 #> 5 Astripomoea lachnosperma        (Choisy) A. Meeuse  3.0    3    0    3  3.0 #> 6       Coccinia trilobata        (Cogn.) C. Jeffrey  3.0    0    3    3  0.5  ## cross table of recorded genera Cross <- crosstable(cover_perc ~ ReleveID + AcceptedName + AuthorName,     data = veg, FUN = mean, level = \"genus\") head(Cross[ , 1:7]) #>   AcceptedName       AuthorName 2005 2059 2061 2080 2102 #> 1  Cyphostemma (Planch.) Alston  0.5  0.5  0.5  0.5  0.5 #> 2  Cassipourea            Aubl.   NA   NA   NA   NA   NA #> 3       Dregea          E. Mey.   NA   NA   NA   NA   NA #> 4    Digitaria           Haller   NA   NA   NA   NA   NA #> 5 Chlorophytum        Ker Gawl.   NA   NA   NA   NA   NA #> 6 Plectranthus          L'HÃ©r.   NA   NA   NA   NA   NA  ## cross table of data merged to genus Cross <- crosstable(cover_perc ~ ReleveID + AcceptedName + AuthorName,     data = veg, FUN = sum, level = \"genus\", include_lower = TRUE) head(Cross[ , 1:7]) #>      AcceptedName                                 AuthorName 2008 2102 2112 #> 1       Bullockia      (Bridson) Razafim., Lantz & B. Bremer  0.5   NA   NA #> 2          Scutia                     (Comm. ex DC.) Brongn.   NA  0.5  0.5 #> 3   Dichrostachys                         (DC.) Wight & Arn.   NA   NA   NA #> 4 Lepidotrichilia (Harms) J.-F. Leroy ex T.D. Penn. & Styles   NA   NA   NA #> 5      Afrocarpus        (J. Buchholz & E.G. Gray) C.N. Page   NA   NA   NA #> 6        Leonotis                             (Pers.) R. Br.   NA   NA   NA #>   2121 2165 #> 1   NA   NA #> 2  0.5    1 #> 3   NA   NA #> 4 10.0   NA #> 5   NA   NA #> 6   NA   NA  ## the same for families Cross <- crosstable(cover_perc ~ ReleveID + AcceptedName + AuthorName,     data = veg, FUN = sum, level = \"family\", include_lower = TRUE) head(Cross[ , 1:7]) #>     AcceptedName       AuthorName 1966 1980 1988 2005 2010 #> 1 Passifloraceae Juss. ex Roussel  0.5  0.5  0.5  0.5  0.5 #> 2    Acanthaceae               NA   NA 22.0 10.0  0.5 19.0 #> 3    Achariaceae               NA   NA   NA   NA   NA   NA #> 4      Aizoaceae               NA   NA   NA   NA  3.0   NA #> 5  Amaranthaceae               NA  3.0   NA 19.0 36.0  3.0 #> 6 Amaryllidaceae               NA   NA   NA   NA   NA   NA"},{"path":"http://kamapu.github.io/vegtable/reference/df2coverconvert.html","id":null,"dir":"Reference","previous_headings":"","what":"Create coverconvert objects — df2coverconvert","title":"Create coverconvert objects — df2coverconvert","text":"class coverconvert contains tables transforming cover values percentage using function cover_trans(). objects can created conversion tables imported data frames.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2coverconvert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create coverconvert objects — df2coverconvert","text":"","code":"df2coverconvert(x, ...)  # S3 method for list df2coverconvert(x, ...)  # S3 method for data.frame df2coverconvert(x, name, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/df2coverconvert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create coverconvert objects — df2coverconvert","text":"x Either data frame list data frames containing conversion table. Three columns mandatory data frames, namely value (factor symbols class cover scale, sorted lowest highest value), bottom (numeric value bottom values class), top (numeric value top values class). values bottom top usually cover percentage may refer numeric abundance. ... arguments passed among methods. name character value used name cover scale data frame method. list method, name extracted names elements list.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2coverconvert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create coverconvert objects — df2coverconvert","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2coverconvert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create coverconvert objects — df2coverconvert","text":"","code":"## Convert object into list cov <- as(Kenya_veg@coverconvert, \"list\")  ## Convert back to coverconvert cov <- df2coverconvert(cov)"},{"path":"http://kamapu.github.io/vegtable/reference/df2vegtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data frame into a vegtable object. — df2vegtable","title":"Convert a data frame into a vegtable object. — df2vegtable","text":"Conversion data frame containing cross table abundance cover species single plots. function coerces data frame containing vegetation cross table vegtable object. input data frame x may include information layers .","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2vegtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data frame into a vegtable object. — df2vegtable","text":"","code":"df2vegtable(x, species, layer, ...)  # S4 method for data.frame,numeric,numeric df2vegtable(x, species, layer, ...)  # S4 method for data.frame,numeric,missing df2vegtable(x, species, layer, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/df2vegtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data frame into a vegtable object. — df2vegtable","text":"x data frame formatted taxlist object. species Numeric integer indicating position column species names. layer Numeric integer indicating position column layers. ... arguments passed methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2vegtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data frame into a vegtable object. — df2vegtable","text":"vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2vegtable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a data frame into a vegtable object. — df2vegtable","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/df2vegtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data frame into a vegtable object. — df2vegtable","text":"","code":"## Creating data set 'dune_veg' library(vegan) #> Loading required package: permute #> Loading required package: lattice #> This is vegan 2.6-4  ## Load data from vegan data(dune) data(dune.env)  ## Conversion to vegtable dune_veg <- data.frame(   species = colnames(dune), t(dune),   stringsAsFactors = FALSE, check.names = FALSE ) dune_veg <- df2vegtable(dune_veg, species = 1)  summary(dune_veg) #> ## Metadata  #>    object size: 24.9 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 20  #>    plots with records: 20  #>    variables in header: 1  #>    number of relations: 0  #>  #> ## Taxonomic List  #>    taxon names: 30  #>    taxon concepts: 30  #>    validity: TRUE  #>   ## Adding environmental variables dune.env$ReleveID <- as.integer(rownames(dune.env)) header(dune_veg) <- dune.env  summary(dune_veg) #> ## Metadata  #>    object size: 28.9 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 20  #>    plots with records: 20  #>    variables in header: 6  #>    number of relations: 0  #>  #> ## Taxonomic List  #>    taxon names: 30  #>    taxon concepts: 30  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/dune_veg-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Dutch dune meadows as vegtable — dune_veg-data","title":"Dutch dune meadows as vegtable — dune_veg-data","text":"Data set package vegan::vegan, converted vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/dune_veg-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dutch dune meadows as vegtable — dune_veg-data","text":"","code":"dune_veg"},{"path":"http://kamapu.github.io/vegtable/reference/dune_veg-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dutch dune meadows as vegtable — dune_veg-data","text":"object class vegtable.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/dune_veg-data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dutch dune meadows as vegtable — dune_veg-data","text":"Original data imported vegan::dune.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/dune_veg-data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dutch dune meadows as vegtable — dune_veg-data","text":"Jongman RHG, ter Braak CJF, van Tongeren OFR (1987). Data analysis community landscape ecology. Pudoc, Wageningen, NL.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/dune_veg-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dutch dune meadows as vegtable — dune_veg-data","text":"","code":"summary(dune_veg) #> ## Metadata  #>    object size: 22.2 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 20  #>    plots with records: 20  #>    variables in header: 6  #>    number of relations: 0  #>  #> ## Taxonomic List  #>    taxon names: 30  #>    taxon concepts: 30  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/format_F2.html","id":null,"dir":"Reference","previous_headings":"","what":"Have to be described — format_F2","title":"Have to be described — format_F2","text":"described","code":""},{"path":"http://kamapu.github.io/vegtable/reference/format_F2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Have to be described — format_F2","text":"","code":"format_F2(x)"},{"path":"http://kamapu.github.io/vegtable/reference/header.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve or replace slot header in vegtable objects — header","title":"Retrieve or replace slot header in vegtable objects — header","text":"Retrieve replace content slot header vegtable objects.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve or replace slot header in vegtable objects — header","text":"","code":"header(x, ...)  # S4 method for vegtable header(x, ...)  header(x) <- value  # S4 method for vegtable,data.frame header(x) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve or replace slot header in vegtable objects — header","text":"x Object class vegtable. ... arguments passed methods. value Data frame set slot header.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/header.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve or replace slot header in vegtable objects — header","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve or replace slot header in vegtable objects — header","text":"","code":"head(header(Kenya_veg)) #>     ReleveID COUNTRY REFERENCE TABLE_NR NR_IN_TAB COVERSCALE DATE SURF_AREA #> 358      358      KE      2974        1         1         01 <NA>        NA #> 359      359      KE      2974        1         2         01 <NA>        NA #> 360      360      KE      2974        1         3         01 <NA>        NA #> 361      361      KE      2974        1         4         01 <NA>        NA #> 362      362      KE      2974        1         5         01 <NA>        NA #> 363      363      KE      2974        1         6         01 <NA>        NA #>     ALTITUDE EXPOSITION INCLINATIO COV_TOTAL TREE_HIGH     REMARKS LONGITUDE #> 358       NA       <NA>         NA        NA        NA Mount Nyiro   36.8167 #> 359       NA       <NA>         NA        NA        NA Mount Nyiro   36.8167 #> 360       NA       <NA>         NA        NA        NA Mount Nyiro   36.8167 #> 361       NA       <NA>         NA        NA        NA Mount Nyiro   36.8167 #> 362       NA       <NA>         NA        NA        NA Mount Nyiro   36.8167 #> 363       NA       <NA>         NA        NA        NA Mount Nyiro   36.8167 #>     LATITUDE PH_H2O                               COMM_TYPE COORDVAL SOIL_TEXT #> 358   2.1833     NA Faureo-Ilicetum xymaletosum wet variant       NA      <NA> #> 359   2.1833     NA Faureo-Ilicetum xymaletosum wet variant       NA      <NA> #> 360   2.1833     NA Faureo-Ilicetum xymaletosum wet variant       NA      <NA> #> 361   2.1833     NA Faureo-Ilicetum xymaletosum wet variant       NA      <NA> #> 362   2.1833     NA Faureo-Ilicetum xymaletosum wet variant       NA      <NA> #> 363   2.1833     NA Faureo-Ilicetum xymaletosum wet variant       NA      <NA> #>     HEIGHT_T1 HEIGHT_T2 HEIGHT_S1 HEIGHT_S2 HEIGHT_HL COVER_T1 COVER_T2 #> 358        NA        NA        NA        NA        NA       NA       NA #> 359        NA        NA        NA        NA        NA       NA       NA #> 360        NA        NA        NA        NA        NA       NA       NA #> 361        NA        NA        NA        NA        NA       NA       NA #> 362        NA        NA        NA        NA        NA       NA       NA #> 363        NA        NA        NA        NA        NA       NA       NA #>     COVER_S1 COVER_S2 COVER_HL ORIG_CODE RECORD DIM_1 DIM_2 #> 358       NA       NA       NA      <NA>     vp    NA    NA #> 359       NA       NA       NA      <NA>     vp    NA    NA #> 360       NA       NA       NA      <NA>     vp    NA    NA #> 361       NA       NA       NA      <NA>     vp    NA    NA #> 362       NA       NA       NA      <NA>     vp    NA    NA #> 363       NA       NA       NA      <NA>     vp    NA    NA"},{"path":"http://kamapu.github.io/vegtable/reference/layers2samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add information from slot 'layers' into slot 'samples' — layers2samples","title":"Add information from slot 'layers' into slot 'samples' — layers2samples","text":"Slot layers may include additional information moved samples order use subset(), aggregate() crosstable() methods. names variables provided, variables respective layer table inserted slot samples.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/layers2samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add information from slot 'layers' into slot 'samples' — layers2samples","text":"","code":"layers2samples(object, layer, variable, ...)  # S4 method for vegtable,character,character layers2samples(object, layer, variable, ...)  # S4 method for vegtable,character,missing layers2samples(object, layer, variable, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/layers2samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add information from slot 'layers' into slot 'samples' — layers2samples","text":"object object class vegtable. layer Character value indicating target layer. variable Character vector names variables inserted slot samples. ... arguments passed among methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/layers2samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add information from slot 'layers' into slot 'samples' — layers2samples","text":"object class vegtable variables added samples.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/layers2samples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add information from slot 'layers' into slot 'samples' — layers2samples","text":"Miguel Alvarez kamapu78@gmail.com.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a Cocktail classification — make_cocktail","title":"Produce a Cocktail classification — make_cocktail","text":"Classification vegtable objects according Cocktail algorithms. Cocktail algorithms logical functions selecting plots according either occurrence species groups cover values single species. group declared occurring plot least half members present plot. function inserts single columns logical values indicating whether plot classified vegetation unit . additional column (name provided argument syntax) compile vegetation units, indicating + symbol plots classified one vegetation unit. part formulas used, specified argument . functions implemented constructing complementing shaker objects. Note construction objects always require companion object, either object class taxlist vegtable.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a Cocktail classification — make_cocktail","text":"","code":"set_group(shaker, companion, group, ...)  # S4 method for shaker,taxlist,character set_group(   shaker,   companion,   group,   group_id,   authority = FALSE,   enc_cont = \"latin1\",   enc_gr = \"utf8\",   ... )  # S4 method for shaker,vegtable,character set_group(shaker, companion, group, ...)  set_pseudo(shaker, companion, pseudo, ...)  # S4 method for shaker,taxlist,character set_pseudo(   shaker,   companion,   pseudo,   pseudo_id,   authority = FALSE,   enc_cont = \"latin1\",   enc_gr = \"utf8\",   ... )  # S4 method for shaker,vegtable,character set_pseudo(shaker, companion, pseudo, ...)  set_formula(shaker, companion, formula, ...)  # S4 method for shaker,taxlist,character set_formula(   shaker,   companion,   formula,   formula_id,   authority = FALSE,   enc_cont = \"latin1\",   enc_gr = \"utf8\",   ... )  # S4 method for shaker,vegtable,character set_formula(shaker, companion, formula, ...)  make_cocktail(shaker, vegtable, ...)  # S4 method for shaker,vegtable make_cocktail(   shaker,   vegtable,   which,   cover,   syntax = \"Syntax\",   FUN = sum,   in_header = TRUE,   ... )"},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a Cocktail classification — make_cocktail","text":"shaker object class shaker containing respective cocktail definitions. companion Either taxlist vegtable object. ... arguments passes methods. authority Logical value indicating whether author names included taxon name . enc_cont, enc_gr Encodings used special characters. pseudo, group Character vector names taxa included pseudo-species species group. pseudo_id, group_id, formula_id Character value name pseudo-species, species group defined vegetation unit. formula Character vector including formula definition vegetation unit. vegtable object class vegtable containing vegetation observations classified. Integer character indicating definition applied classification. cover Name cover variable vegtable. syntax Character value indicating name retrieved variable including final classification plots. FUN Function used merging multiple occurrence species single plot. in_header Logical value indicating whether results Cocktail classification inserted header input vegtable . second case, data frame provided output.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a Cocktail classification — make_cocktail","text":"data frame corresponding slot header input object vegtable, including results Cocktail classification respective plots. shaker object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Produce a Cocktail classification — make_cocktail","text":"Alvarez M (2017). Classification aquatic semi-aquatic vegetation two East African sites: Cocktail definitions syntaxonomy. Phytocoenologia. Bruelheide H (2000). new measure fidelity application defining species groups. Journal Vegetation Science 11: 167--178. Kočí M, Chytrý M, Tichý L (2003). Formalized reproduction expert-based phytosociological classification: case study subalpine tall-forb vegetation. Journal Vegetation Science 14: 601--610.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a Cocktail classification — make_cocktail","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/make_cocktail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a Cocktail classification — make_cocktail","text":"","code":"## Example from Alvarez (2017) Wetlands_veg <- make_cocktail(Wetlands, Wetlands_veg, cover = \"percen\") summary(as.factor(Wetlands_veg@header$Syntax)) #>    +  HE1  HE2  HE3  HE4  HE5  HE6  HE7  HY1  HY2 NA's  #>    1   10   10   10    6    8    4    2   10    8   31   ## Same but only for two vegetation units Wetlands_veg <- make_cocktail(Wetlands, Wetlands_veg,   which = c(\"HY1\", \"HY2\"), cover = \"percen\" ) summary(as.factor(Wetlands_veg$Syntax)) #>  HY1  HY2 NA's  #>   10    8   82   ## Construct the 'shaker' object anew Wetlands <- new(\"shaker\")  ## Set a pseudo-species Wetlands <- set_pseudo(Wetlands, Wetlands_veg, c(   \"Cyperus latifolius\",   \"Cyperus exaltatus\" ))  ## Set a species group Wetlands <- set_group(Wetlands, Wetlands_veg,   group_id = \"Cyperus papyrus\",   group = c(     \"Cyperus papyrus\",     \"Cyclosorus interruptus\",     \"Lepistemon owariense\"   ) )  ## Set a fromula Wetlands <- set_formula(Wetlands, Wetlands_veg,   formula_id = \"HE1\",   formula = \"groups:'Cyperus papyrus' | species:'Cyperus papyrus > 50'\" )  ## Summaries summary(Wetlands) #> Number of pseudo-species: 1  #> Number of species groups: 1  #> Number of formulas: 1  summary(Wetlands, Wetlands_veg) #> ## Pseudo-species:  #> * 'Cyperus latifolius' contains:  #>      Cyperus exaltatus  #>  #> ## Species groups:  #> * 'Cyperus papyrus' group:  #>      Cyperus papyrus  #>      Cyclosorus interruptus  #>      Lepistemon owariense  #>  #> ## Formulas:  #> * HE1: groups:'Cyperus papyrus' | species:'Cyperus papyrus > 50'  #>"},{"path":"http://kamapu.github.io/vegtable/reference/names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve names of vegtable and coverconvert objects — names","title":"Retrieve names of vegtable and coverconvert objects — names","text":"Quick access column names slot header names conversion codes. methods provide quick display contents coverconvert vegtable objects.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve names of vegtable and coverconvert objects — names","text":"","code":"# S4 method for vegtable names(x)  # S4 method for vegtable dimnames(x)  # S4 method for coverconvert names(x)  # S4 method for coverconvert names(x) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve names of vegtable and coverconvert objects — names","text":"x object class coverconvert vegtable. value character vector used replacement methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve names of vegtable and coverconvert objects — names","text":"list containing names slot. Either vector list (case dimnames()) names variables.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve names of vegtable and coverconvert objects — names","text":"Miguel Alvarez kamapu78@gmail.com.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve names of vegtable and coverconvert objects — names","text":"","code":"names(Kenya_veg@coverconvert) #> [1] \"br_bl\"  \"b_bbds\" \"ordin.\" names(Kenya_veg) #> $description #> [1] \"db_name\"    \"sp_list\"    \"dictionary\" #>  #> $samples #> [1] \"ReleveID\"     \"TaxonUsageID\" \"COVER_CODE\"   \"LAYER\"        \"SOCIABILIT\"   #> [6] \"INDIVID\"      \"br_bl\"        \"b_bbds\"       #>  #> $header #>  [1] \"ReleveID\"   \"COUNTRY\"    \"REFERENCE\"  \"TABLE_NR\"   \"NR_IN_TAB\"  #>  [6] \"COVERSCALE\" \"DATE\"       \"SURF_AREA\"  \"ALTITUDE\"   \"EXPOSITION\" #> [11] \"INCLINATIO\" \"COV_TOTAL\"  \"TREE_HIGH\"  \"REMARKS\"    \"LONGITUDE\"  #> [16] \"LATITUDE\"   \"PH_H2O\"     \"COMM_TYPE\"  \"COORDVAL\"   \"SOIL_TEXT\"  #> [21] \"HEIGHT_T1\"  \"HEIGHT_T2\"  \"HEIGHT_S1\"  \"HEIGHT_S2\"  \"HEIGHT_HL\"  #> [26] \"COVER_T1\"   \"COVER_T2\"   \"COVER_S1\"   \"COVER_S2\"   \"COVER_HL\"   #> [31] \"ORIG_CODE\"  \"RECORD\"     \"DIM_1\"      \"DIM_2\"      #>  #> $relations #> [1] \"COUNTRY\"    \"REFERENCE\"  \"COVERSCALE\" #>  #> $coverconvert #> [1] \"br_bl\"  \"b_bbds\" \"ordin.\" #>  dimnames(Kenya_veg) #> [[1]] #>    [1]  358  359  360  361  362  363  364  365  366  367  368  369  370  371 #>   [15]  372  373  374  375  376  377  378  379  380  381  382  383  384  385 #>   [29]  386  387  388  389  390  391  392  393  394  395  396  397  398  399 #>   [43]  400  401  402  403  404  405  406  407  408  409  410  411  412  413 #>   [57]  414  415  416  417  418  419  420  421  422  423  424  425  426  427 #>   [71]  428  429  430  431  432  433  434  435  436  437  438  439  440  441 #>   [85]  442  443  444  445  446  447  448  449  450  451  452  453  454  455 #>   [99]  456  457  458  459  460  461  462  463  464  465  466  467  468  469 #>  [113]  470  471  472  473  474  475  476  477  478  479  480  481  482  483 #>  [127]  484  485  486  487  488  489  490  491  492  493  494  495  496  497 #>  [141]  498  499  500  501  502  503  504  505  506  507  508  509  510  511 #>  [155]  512  513  514  515  516  517  518  519  520  521  522  523  524  525 #>  [169]  526  527  528  529  530  531  532  533  534  535  536  537  538  539 #>  [183]  540  541  542  543  544  545  546  547  548  549  550  551  552  553 #>  [197]  554  555  556  557  558  559  560  561  562  563  564  565  566  567 #>  [211]  568  569  570  571  572  573  574  575  576  577  578  579  580  581 #>  [225]  582  583  584  585  586  587  588  589  590  591  592  593  594  595 #>  [239]  596  597  598  599  600  601  602  603  604  605  606  607  608  609 #>  [253]  610  611  612  613  614  615  616  617  618  619  620  621  622  623 #>  [267]  624  625  626  627  628  629  630  631  632  633  634  635  636  637 #>  [281]  638  639  640  641  642  643  644  645  646  647  648  649  650  651 #>  [295]  652  653  654  655  656  657  658  659  660  661  662  663  664  665 #>  [309]  666  667  668  669  670  671  672  673  674  675  676  677  678  679 #>  [323]  680  681  682  683  684  685  686  687  688  689  690  691  692  693 #>  [337]  694  695  696  697  698  699  700  701  702  703  704  705  706  707 #>  [351]  708  709  710  711  712  713  714  715  716  717  718  719  720  721 #>  [365]  722  723  724  725  726  727  728  729  730  731  732  733  734  735 #>  [379]  736  737  738  739  740  741  742  743  744  745  746  747  748  749 #>  [393]  750  751  752  753  754  755  756  757  758  759  760  761  762  763 #>  [407]  764  765  766  767  768  769  770  771  772  773  774  775  776  777 #>  [421]  778  779  780  781  782  783  784  785  786  787  788  789  790  791 #>  [435]  792  793  794  795  796  797  798  799  800  801  802  803  804  805 #>  [449]  806  807  808  809  810  811  812  813  814  815  816  817  818  819 #>  [463]  820  821  822  823  824  825  826  827  828  829  830  831  832  833 #>  [477]  834  835  836  837  838  839  840  841  842  843  844  845  846  847 #>  [491]  848  849  850  851  852  853  854  855  856  857  858  859  860  861 #>  [505]  862  863  864  865  866  867  868  869  870  871  872  873  874  875 #>  [519]  876  877  878  879  880  881  882  883  884  885  886  887  888  889 #>  [533]  890  891  892  893  894  895  896  897  898  899  900  901  902  903 #>  [547]  904  905  906  907  908  909  910  911  912  913  914  915  916  917 #>  [561]  918  919  920  921  922  923  924  925  926  927  928  929  930  931 #>  [575]  932  933  934  935  936  937  938  939  940  941  942  943  944  945 #>  [589]  946  947  948  949  950  951  952  953  954  955  956  957  958  959 #>  [603]  960  961  962  963  964  965  966  967  968  969  970  971  972  973 #>  [617]  974  975  976  977  978  979  980  981  982  983  984  985  986  987 #>  [631]  988  989  990  991  992  993  994  995  996  997  998  999 1000 1001 #>  [645] 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 #>  [659] 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 #>  [673] 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 #>  [687] 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 #>  [701] 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 #>  [715] 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 #>  [729] 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 #>  [743] 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 #>  [757] 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 #>  [771] 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 #>  [785] 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 #>  [799] 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 #>  [813] 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 #>  [827] 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 #>  [841] 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 #>  [855] 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 #>  [869] 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 #>  [883] 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 #>  [897] 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 #>  [911] 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 #>  [925] 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 #>  [939] 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 #>  [953] 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 #>  [967] 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 #>  [981] 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 #>  [995] 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 #> [1009] 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 #> [1023] 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 #> [1037] 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 #> [1051] 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 #> [1065] 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 #> [1079] 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 #> [1093] 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 #> [1107] 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 #> [1121] 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 #> [1135] 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 #> [1149] 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 #> [1163] 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 #> [1177] 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 #> [1191] 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 #> [1205] 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 #> [1219] 1576 1577 1578 1579 1580 1581 1582 1583 1584 1585 1586 1587 1588 1589 #> [1233] 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 #> [1247] 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 #> [1261] 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 #> [1275] 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 #> [1289] 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 #> [1303] 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 #> [1317] 1674 1675 1676 1677 1678 1679 1680 1681 1682 1683 1684 1685 1686 1687 #> [1331] 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 #> [1345] 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 #> [1359] 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 #> [1373] 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 #> [1387] 1744 1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 #> [1401] 1758 1759 1760 1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 #> [1415] 1772 1773 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 #> [1429] 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 #> [1443] 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 #> [1457] 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 #> [1471] 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 #> [1485] 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 #> [1499] 1856 1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 #> [1513] 1870 1871 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 #> [1527] 1884 1885 1886 1887 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 #> [1541] 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 #> [1555] 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1937 1938 1939 #> [1569] 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 #> [1583] 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 #> [1597] 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 #> [1611] 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 #> [1625] 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 #> [1639] 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 #> [1653] 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 #> [1667] 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050 2051 #> [1681] 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 #> [1695] 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 #> [1709] 2080 2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 #> [1723] 2094 2095 2096 2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 #> [1737] 2108 2109 2110 2111 2112 2113 2114 2115 2116 2117 2118 2119 2120 2121 #> [1751] 2122 2123 2124 2125 2126 2127 2128 2129 2130 2131 2132 2133 2134 2135 #> [1765] 2136 2137 2138 2139 2140 2141 2142 2143 2144 2145 2146 2147 2148 2149 #> [1779] 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 2161 2162 2163 #> [1793] 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175 2176 2177 #> [1807] 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 #> [1821] 2192 2193 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205 #> [1835] 2206 2207 2208 2209 2210 2211 2212 2213 2214 2215 2216 2217 2218 2219 #> [1849] 2220 2221 2222 2223 2224 2225 2226 2227 2228 2229 2230 2231 2232 2233 #> [1863] 2234 2235 2236 2237 2238 2239 2240 2241 2242 2243 2244 2245 2246 2247 #> [1877] 2248 2249 2250 2251 2252 2253 2254 2255 2256 2257 2258 2259 2260 2261 #> [1891] 2708 2709 2710 2711 2712 2713 2714 2715 2716 2717 2718 2719 2720 2721 #> [1905] 2722 2723 2724 2725 2726 2727 2728 2729 2730 2731 2732 2733 2734 2735 #> [1919] 2736 2737 2738 2739 2740 2741 2742 2743 2744 2745 2746 2747 2748 2749 #> [1933] 2750 2751 2752 2753 2754 2755 2756 2757 2758 2759 2760 2761 2762 2763 #>  #> [[2]] #>  [1] \"ReleveID\"   \"COUNTRY\"    \"REFERENCE\"  \"TABLE_NR\"   \"NR_IN_TAB\"  #>  [6] \"COVERSCALE\" \"DATE\"       \"SURF_AREA\"  \"ALTITUDE\"   \"EXPOSITION\" #> [11] \"INCLINATIO\" \"COV_TOTAL\"  \"TREE_HIGH\"  \"REMARKS\"    \"LONGITUDE\"  #> [16] \"LATITUDE\"   \"PH_H2O\"     \"COMM_TYPE\"  \"COORDVAL\"   \"SOIL_TEXT\"  #> [21] \"HEIGHT_T1\"  \"HEIGHT_T2\"  \"HEIGHT_S1\"  \"HEIGHT_S2\"  \"HEIGHT_HL\"  #> [26] \"COVER_T1\"   \"COVER_T2\"   \"COVER_S1\"   \"COVER_S2\"   \"COVER_HL\"   #> [31] \"ORIG_CODE\"  \"RECORD\"     \"DIM_1\"      \"DIM_2\"      #>"},{"path":"http://kamapu.github.io/vegtable/reference/new_relation.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a new variable as relation in vegtable object — new_relation","title":"Insert a new variable as relation in vegtable object — new_relation","text":"Insert new variable slot header respective table slot relations. respective variable header set factor. Existing categorical variables can also set relations. variables factors, levels can preserved (missing argument 'levels') reset.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/new_relation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a new variable as relation in vegtable object — new_relation","text":"","code":"new_relation(object, ...)  # S3 method for vegtable new_relation(object, relation, levels, ...)  new_relation(object, levels) <- value  # S4 method for vegtable,character,character new_relation(object, levels) <- value  # S4 method for vegtable,missing,character new_relation(object) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/new_relation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a new variable as relation in vegtable object — new_relation","text":"object vegtable object. ... arguments passed among methods. relation, value character value indicating name new relation. parameter 'value' used replacement method levels character vector levels inserted factor. may missing variables already exist slot header.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/new_relation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert a new variable as relation in vegtable object — new_relation","text":"vegtable object inserted new relation.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/new_relation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a new variable as relation in vegtable object — new_relation","text":"","code":"## A brand new variable new_relation(Kenya_veg, levels = c(\"forest\", \"grassland\", \"cropland\")) <- \"land_use\"  ## Set an existing variable as relation new_relation(Kenya_veg) <- \"REMARKS\""},{"path":"http://kamapu.github.io/vegtable/reference/relation2heder.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert variables from relations into header — relation2header","title":"Insert variables from relations into header — relation2header","text":"Information associated categories listed slot relations can inserted slot header statistical comparisons.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/relation2heder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert variables from relations into header — relation2header","text":"","code":"relation2header(vegtable, ...)  # S3 method for vegtable relation2header(vegtable, relation, vars, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/relation2heder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert variables from relations into header — relation2header","text":"vegtable vegtable object. ... arguments passed among methods relation character value indicating relation used inserting new variables slot header. vars selection variables relation inserted header. function check existence variables respective relation retrieve error none matching names. missing arguments, variables respective relation inserted.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/relation2heder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert variables from relations into header — relation2header","text":"vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/relation2heder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert variables from relations into header — relation2header","text":"Miguel Alvarez, kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/relation2heder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert variables from relations into header — relation2header","text":"","code":"## Insert publication year of the source into header veg <- relation2header(Kenya_veg, \"REFERENCE\", \"YEAR\")  ## Show the frequency of plots per publication year summary(as.factor(veg$YEAR)) #> 1990 1991 1994 2002 2014  #>  325  693  610  262   56"},{"path":"http://kamapu.github.io/vegtable/reference/rewrite_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-writing formulas for print output — rewrite_formulas","title":"Re-writing formulas for print output — rewrite_formulas","text":"Mediating syntax print format.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/rewrite_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-writing formulas for print output — rewrite_formulas","text":"","code":"rewrite_formulas(shaker, companion)"},{"path":"http://kamapu.github.io/vegtable/reference/rewrite_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-writing formulas for print output — rewrite_formulas","text":"shaker shaker object. companion companion data set either missing vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/rewrite_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-writing formulas for print output — rewrite_formulas","text":"formated output text.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/shaker-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class containing Cocktail algorithms. — shaker-class","title":"Class containing Cocktail algorithms. — shaker-class","text":"Objects used collecting Cocktail definitions. objects work expert systems recognition defined vegetation units among plots vegtable object. shaker object always dependent vegtable object, called companion. Since modifications companion may affect functionality shaker object, recommended create last session source script instead recycling old R images.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/shaker-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class containing Cocktail algorithms. — shaker-class","text":"pseudos List containing IDs taxa merged pseudo-species. groups List containing IDs taxa belonging Cocktail group. dominants data frame including lists species used dominant species Cocktail algorithms, well operators cover values used formulas. formulas List formulas used definitions vegetation units.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/shaker-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class containing Cocktail algorithms. — shaker-class","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/shaker-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class containing Cocktail algorithms. — shaker-class","text":"","code":"showClass(\"shaker\") #> Class \"shaker\" [package \"vegtable\"] #>  #> Slots: #>                                                    #> Name:     pseudos     groups  dominants   formulas #> Class:       list       list data.frame       list"},{"path":"http://kamapu.github.io/vegtable/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset functions for vegtable objects — subset","title":"Subset functions for vegtable objects — subset","text":"Produce subsets vegtable objects. Logical operations can applied either plots, relations, main slots class. method can referred slot species way taxlist::subset(), rest data include references subset species list.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset functions for vegtable objects — subset","text":"","code":"# S4 method for vegtable subset(   x,   subset,   slot = \"header\",   keep_children = FALSE,   keep_parents = FALSE,   relation,   ... )"},{"path":"http://kamapu.github.io/vegtable/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset functions for vegtable objects — subset","text":"x vegtable object subset. subset Logical expression subset. slot Character value indicating slot used reference subset. moment values \"taxonNames\", \"taxonRelations\", \"taxonTraits\", \"header\", \"samples\", \"relations\" accepted. three first values applied respective slots contained taxlist object (slot species). keep_children Argument passed taxlist::get_children(). keep_parents Argument passed taxlist::get_parents(). relation Character value indicating relation (slot relations) used reference subset. ... arguments passed methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset functions for vegtable objects — subset","text":"S4 object class vegtable.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/subset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subset functions for vegtable objects — subset","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset functions for vegtable objects — subset","text":"","code":"## Subset by taxon name Kenya_sub <- subset(   x = Kenya_veg, subset = TaxonName == \"Tagetes\",   slot = \"taxonNames\", keep_children = TRUE, keep_parents = TRUE ) summary(Kenya_sub) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 803 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 48  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3  #>    taxon concepts: 3  #>    validity: TRUE  #>  summary(Kenya_sub@species) #> object size: 7.5 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 3  #> number of taxon concepts: 3  #> trait entries: 1  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 2  #> concepts with children: 2  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 1 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>   ## Subset by taxon relations Kenya_sub <- subset(   x = Kenya_veg, subset = Level == \"species\",   slot = \"taxonRelations\" ) summary(Kenya_sub) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 8657.9 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 1946  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 2089  #>    taxon concepts: 1422  #>    validity: TRUE  #>  summary(Kenya_sub@species) #> object size: 353 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 2089  #> number of taxon concepts: 1422  #> trait entries: 102  #> number of trait variables: 1  #> taxon views: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 1422 #> number of concepts in level complex: 0 #> number of concepts in level genus: 0 #> number of concepts in level family: 0 #>   ## Subset by taxon traits Kenya_sub <- subset(   x = Kenya_veg, subset = lf_behn_2018 == \"obligate_annual\",   slot = \"taxonTraits\" ) summary(Kenya_sub) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 965.9 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 907  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 121  #>    taxon concepts: 32  #>    validity: TRUE  #>  summary(Kenya_sub@species) #> object size: 26.8 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 121  #> number of taxon concepts: 32  #> trait entries: 32  #> number of trait variables: 1  #> taxon views: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 32 #> number of concepts in level complex: 0 #> number of concepts in level genus: 0 #> number of concepts in level family: 0 #>   ## Subset by header Kenya_sub <- subset(x = Kenya_veg, subset = ALTITUDE <= 1000, slot = \"header\") summary(Kenya_sub) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 725.2 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 16  #>    plots with records: 16  #>    variables in header: 27  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>   ## Subset by samples (after converting coverage) Kenya_veg <- cover_trans(x = Kenya_veg, to = \"cover_percentage\", rule = \"middle\") Kenya_sub <- subset(x = Kenya_veg, subset = cover_percentage >= 50, slot = \"samples\") summary(Kenya_sub) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 1489.8 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 1084  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>   ## Subset by relations Kenya_sub <- subset(   x = Kenya_veg, subset = as.integer(YEAR) >= 2000,   slot = \"relations\", relation = \"REFERENCE\" ) summary(Kenya_sub) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 2674.5 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 318  #>    plots with records: 318  #>    variables in header: 30  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>"},{"path":"http://kamapu.github.io/vegtable/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for vegtable objects — summary","title":"Summary method for vegtable objects — summary","text":"Display summaries vegtable objects. methods implemented objects classes vegtable, coverconvert shaker. method class vegtable retrieves metadata, size object, validity additional statistics content input object. objects class shaker, function summary() either retrieve general statistics companion missing, detailed display accompained taxlist vegtable object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for vegtable objects — summary","text":"","code":"# S4 method for vegtable summary(object, units = \"Kb\", ...)  # S4 method for coverconvert summary(object, ...)  # S4 method for shaker summary(object, companion, authority = FALSE, ...)  # S4 method for vegtable show(object)  # S4 method for vegtable print(x, ...)  # S4 method for coverconvert show(object)  # S4 method for coverconvert print(x, ...)  # S4 method for shaker show(object)  # S4 method for shaker print(x, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for vegtable objects — summary","text":"object, x Object summarized. units Units used object size (passed format()). ... arguments passed methods. companion Companion object (either taxlist vegtable object. authority Logical value indicating whether authors displayed .","code":""},{"path":"http://kamapu.github.io/vegtable/reference/summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary method for vegtable objects — summary","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for vegtable objects — summary","text":"","code":"## Summary for 'vegtable' objects summary(Wetlands_veg) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 350.6 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 100  #>    plots with records: 100  #>    variables in header: 24  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 417  #>    taxon concepts: 96  #>    validity: TRUE  #>  ## Summary for 'coverconvert' objects summary(braun_blanquet) #> ## Number of cover scales: 3  #>  #> * scale 'br_bl':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4      2   5 - 25 #> 5      3  25 - 50 #> 6      4  50 - 75 #> 7      5 75 - 100 #>  #> * scale 'b_bbds':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4     2m    1 - 5 #> 5     2a   5 - 15 #> 6     2b  15 - 25 #> 7      3  25 - 50 #> 8      4  50 - 75 #> 9      5 75 - 100 #>  #> * scale 'ordin.':  #>   Levels    Range #> 1      1    0 - 1 #> 2      2    0 - 1 #> 3      3    1 - 5 #> 4      4    1 - 5 #> 5      5   5 - 15 #> 6      6  15 - 25 #> 7      7  25 - 50 #> 8      8  50 - 75 #> 9      9 75 - 100 #>  ## Summary for 'shaker' objects (alone and with companion) summary(Wetlands, Wetlands_veg) #> ## Species groups:  #> * 'Cyperus papyrus' group:  #>      Cyperus papyrus  #>      Cyclosorus interruptus  #>      Lepistemon owariense  #> * 'Cyperus latifolius' group:  #>      Cyperus latifolius  #>      Ludwigia abyssinica  #>      Lythrum rotundifolium  #> * 'Centrostachys aquatica' group:  #>      Centrostachys aquatica  #>      Coldenia procumbens  #>      Heliotropium indicum  #>      Persicaria senegalensis  #> * 'Pistia stratiotes' group:  #>      Pistia stratiotes  #>      Eichhornia crassipes  #>      Azolla pinnata ssp. africana  #> * 'Azolla nilotica' group:  #>      Azolla nilotica  #>      Lemna aequinoctialis  #> * 'Ammannia prieuriana' group:  #>      Ammannia prieuriana  #>      Ethulia conyzoides  #>      Leersia hexandra  #>  #> ## Formulas:  #> * HY1: groups:'Centrostachys aquatica'  #> * HY2: species:'Nymphaea lotus > 25'  #> * HE1: groups:'Cyperus papyrus' | species:'Cyperus papyrus > 50'  #> * HE2: species:'Typha domingensis > 25'  #> * HE3: species:'Cyperus exaltatus > 50'  #> * HE4: groups:'Cyperus latifolius'  #> * HE5: species:'Phragmites australis > 50'  #> * HE6: species:'Panicum subalbidum > 50'  #> * HE7: groups:'Ammannia prieuriana'  #>"},{"path":"http://kamapu.github.io/vegtable/reference/taxa2samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert taxon information into samples — taxa2samples","title":"Insert taxon information into samples — taxa2samples","text":"statistical purposes may necessary insert information recorded taxa slot samples, contain records taxa sampling plots. can also done selectivelly specific taxonomic ranks lower ranks can aggregated parental ones. column TaxonConceptID already existing 'objec@samples', column get overwritten, retrieving warning message.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/taxa2samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert taxon information into samples — taxa2samples","text":"","code":"taxa2samples(object, ...)  # S3 method for vegtable taxa2samples(   object,   merge_to,   include_levels,   add_relations = FALSE,   add_traits = FALSE,   ... )"},{"path":"http://kamapu.github.io/vegtable/reference/taxa2samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert taxon information into samples — taxa2samples","text":"object vegtable object. ... arguments passed among methods. merge_to Character value indicating level (taxonomic rank) taxa lower rank merged. include_levels Character vector indicating levels considered output object. set values TaxonConceptID respective values inserted slots taxonRelations taxonTraits NA. add_relations logical value indicating whether content slot taxonRelations inserted slot samples . add_traits logical value indicating whether content slot taxonTraits inserted slot samples .","code":""},{"path":"http://kamapu.github.io/vegtable/reference/taxa2samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert taxon information into samples — taxa2samples","text":"object class vegtable.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/taxa2samples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert taxon information into samples — taxa2samples","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/taxa2samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert taxon information into samples — taxa2samples","text":"","code":"## Add only variable TaxonConceptID veg <- taxa2samples(Kenya_veg) head(veg@samples) #>   TaxonUsageID ReleveID COVER_CODE LAYER SOCIABILIT INDIVID br_bl b_bbds #> 1           18      358          +     0       <NA>    <NA>     +   <NA> #> 2           18      470          +     0       <NA>    <NA>     +   <NA> #> 3           18     1634          +     0       <NA>    <NA>     +   <NA> #> 4           18      587          +     0       <NA>    <NA>     +   <NA> #> 5           18     1949         2m     0       <NA>    <NA>  <NA>     2m #> 6           18     1777          +     0       <NA>    <NA>     +   <NA> #>   TaxonConceptID #> 1             18 #> 2             18 #> 3             18 #> 4             18 #> 5             18 #> 6             18  ## Add also information from slots taxonRelations and taxonTraits veg <- taxa2samples(Kenya_veg, add_relations = TRUE, add_traits = TRUE) head(veg@samples) #>   TaxonUsageID ReleveID COVER_CODE LAYER SOCIABILIT INDIVID br_bl b_bbds #> 1           18      358          +     0       <NA>    <NA>     +   <NA> #> 2           18      470          +     0       <NA>    <NA>     +   <NA> #> 3           18     1634          +     0       <NA>    <NA>     +   <NA> #> 4           18      587          +     0       <NA>    <NA>     +   <NA> #> 5           18     1949         2m     0       <NA>    <NA>  <NA>     2m #> 6           18     1777          +     0       <NA>    <NA>     +   <NA> #>   TaxonConceptID Parent   Level ViewID  uri Basionym AcceptedName #> 1             18  54759 species      1 <NA>       NA           18 #> 2             18  54759 species      1 <NA>       NA           18 #> 3             18  54759 species      1 <NA>       NA           18 #> 4             18  54759 species      1 <NA>       NA           18 #> 5             18  54759 species      1 <NA>       NA           18 #> 6             18  54759 species      1 <NA>       NA           18 #>         lf_behn_2018 #> 1 facultative_annual #> 2 facultative_annual #> 3 facultative_annual #> 4 facultative_annual #> 5 facultative_annual #> 6 facultative_annual  ## Different ranks recorded at samples veg <- taxa2samples(Kenya_veg, add_relations = TRUE) summary(veg@samples$Level) #>       form    variety subspecies    species    complex      genus     family  #>          0       2489       2453      68685          0        914          0   ## Aggregate taxa to family level veg <- taxa2samples(Kenya_veg, add_relations = TRUE, merge_to = \"family\") summary(veg@samples$Level) #>       form    variety subspecies    species    complex      genus     family  #>          0          0          0          0          0          0      74531  #>       NA's  #>         10"},{"path":"http://kamapu.github.io/vegtable/reference/trait_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistics and proportion for taxon traits — trait_stats","title":"Statistics and proportion for taxon traits — trait_stats","text":"Calculation statistics proportions taxon traits plot observations groups observations, considering data relationships, taxonomic ranks handling available values. trait_stats() can use customized functions, defined foo(x, w, ...), 'x' (numeric) taxon trait 'w' weight (e.g. abundance). arguments taxon_levels merge_to used taxonomic ranks can defined, first one indicates ranks considered calculations second one determine aggregation taxa lower level parental one.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/trait_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistics and proportion for taxon traits — trait_stats","text":"","code":"trait_stats(trait, object, ...)  # S4 method for character,vegtable trait_stats(   trait,   object,   FUN,   head_var = \"ReleveID\",   taxon_levels,   merge_to,   weight,   suffix = \"_stats\",   in_header = TRUE,   ... )  # S4 method for formula,vegtable trait_stats(trait, object, ...)  trait_proportion(trait, object, ...)  # S4 method for character,vegtable trait_proportion(   trait,   object,   head_var = \"ReleveID\",   trait_levels,   taxon_levels,   merge_to,   include_nas = TRUE,   weight,   suffix = \"_prop\",   in_header = TRUE,   ... )  # S4 method for formula,vegtable trait_proportion(trait, object, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/trait_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistics and proportion for taxon traits — trait_stats","text":"trait Either character value indicating name trait variable formula 'trait ~ head_var'. Note can add multiple variables form trait_1 + ... + trait_n ~ head_var. object vegtable object. ... arguments passed among methods. case character method, passed 'FUN'. FUN function usually defined foo(x) foo(x, w) weighted statistics. head_var Character value, name variable slot header used aggregation level calculation statistics proportions. provided, function use ReleveID default. taxon_levels Character vector indicating selected taxonomic ranks considered output. merge_to Character value indicating taxonomic rank aggregation taxa. ranks lower one indicated assigned respective parents required taxonomic rank. weight Character value indicating name variable slot samples used weight proportions. Usually numeric abundance. suffix suffix added name trait variable levels categorical trait variables. meant avoid homonymous variables within object. in_header Logical value indicating whether output inserted slot header provided data frame. case 'head_var' (right term formula method) different ReleveID, statistics proportions inserted respective data frame slot relations. trait_levels Character vector indicating selection levels trait, case levels ignored output. Trait levels skipped output still used calculation proportions. argument gets applied character method. include_nas Logical value indicating whether NAs considered calculation proportions .","code":""},{"path":"http://kamapu.github.io/vegtable/reference/trait_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistics and proportion for taxon traits — trait_stats","text":"data frame proportions traits levels statistics trait variable, object class vegtable including results slot header.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/trait_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Statistics and proportion for taxon traits — trait_stats","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/trait_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistics and proportion for taxon traits — trait_stats","text":"","code":"veg <- cover_trans(Kenya_veg, to = \"cover\") veg <- trait_proportion(\"lf_behn_2018\", veg,   trait_levels = \"obligate_annual\", weight = \"cover\", include_nas = FALSE ) summary(veg$obligate_annual_prop) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>  0.0077  0.2500  0.5000  0.4992  0.7143  1.0000    1039"},{"path":"http://kamapu.github.io/vegtable/reference/tv2vegtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Import of vegetation data from Turboveg databases — tv2vegtable","title":"Import of vegetation data from Turboveg databases — tv2vegtable","text":"Import function Turboveg databases object class vegtable. contents Turboveg databases included DBF files therefore imported function foreign::read.dbf(). automatic setting database path done function vegdata::tv.home() can customised argument tv_home. species list imported using function taxlist::tv2taxlist() therefore formatted taxlist object. Similarly, conversion tables handled coverconvert objects. Empty columns header deleted imported object. function tv2coverconvert() reads content cover conversion tables stored Turboveg attempts reformat comprehensive structure. function used tv2vegtable() import respective conversion table Turboveg databases. Note conversion tables Turboveg stored middle point cover class scale, thus recommended rebuild coverconvert slot use braun_blanquet.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/tv2vegtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import of vegetation data from Turboveg databases — tv2vegtable","text":"","code":"tv2vegtable(   db,   tv_home = tv.home(),   skip_empty_relations = TRUE,   skip_scale,   clean = TRUE )  tv2coverconvert(file, as.is = TRUE)"},{"path":"http://kamapu.github.io/vegtable/reference/tv2vegtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import of vegetation data from Turboveg databases — tv2vegtable","text":"db Name Turboveg data base character value. tv_home Turboveg installation path character value. skip_empty_relations Logical value indicating whether empty relations may excluded imported database . skip_scale Character value indicating scales excluded slot coverconvert. clean Logical value indicating whether output object cleaned . file connection DBF file containing conversion table Turboveg. .logical value passed read.dbf().","code":""},{"path":"http://kamapu.github.io/vegtable/reference/tv2vegtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import of vegetation data from Turboveg databases — tv2vegtable","text":"vegtable object case tv2vegtable(). coverconvert object case tv2coverconvert().","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/tv2vegtable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import of vegetation data from Turboveg databases — tv2vegtable","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/tv2vegtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import of vegetation data from Turboveg databases — tv2vegtable","text":"","code":"## Installed 'Turboveg' version of 'Fujiwara et al. (2014)' # TV_Home <- file.path(path.package(\"vegtable\"), \"tv_data\") # Veg <- tv2vegtable(\"Fujiwara_2014\", TV_Home) # summary(Veg) ## Installed 'Turboveg' version of \"Fujiwara et al. (2014)\" TV_Home <- file.path(path.package(\"vegtable\"), \"tv_data\", \"popup\", \"Swea\") Table <- tv2coverconvert(file.path(TV_Home, \"tvscale.dbf\"))  ## First scale have to be deleted from conversion table Table@value <- Table@value[-1] Table@conversion <- Table@conversion[-1] summary(Table) #> ## Number of cover scales: 12  #>  #> * scale 'br_bl':  #>   Levels   Range #> 1      r   0 - 1 #> 2      x   0 - 1 #> 3      +   1 - 2 #> 4      1   2 - 3 #> 5      2  3 - 13 #> 6      3 13 - 38 #> 7      4 38 - 68 #> 8      5 68 - 88 #>  #> * scale 'b_bbds':  #>   Levels   Range #> 1      r   0 - 1 #> 2      +   1 - 2 #> 3      1   2 - 3 #> 4     2m   3 - 4 #> 5     2a   4 - 8 #> 6     2b  8 - 18 #> 7      3 18 - 38 #> 8      4 38 - 68 #> 9      5 68 - 88 #>  #> * scale 'londo':  #>    Levels   Range #> 1      r1   0 - 1 #> 2      p1   0 - 1 #> 3      a1   0 - 1 #> 4      m1   0 - 1 #> 5      r2   1 - 2 #> 6      p2   1 - 2 #> 7      a2   1 - 2 #> 8      m2   1 - 2 #> 9      r4   2 - 4 #> 10     p4   2 - 4 #> 11     a4   2 - 4 #> 12     m4   2 - 4 #> 13     1-   4 - 7 #> 14      1  7 - 10 #> 15     1+ 10 - 12 #> 16     2- 12 - 17 #> 17      2 17 - 20 #> 18     2+ 20 - 22 #> 19     3- 22 - 27 #> 20      3 27 - 30 #> 21     3+ 30 - 32 #> 22     4- 32 - 37 #> 23      4 37 - 40 #> 24     4+ 40 - 42 #> 25     5- 42 - 47 #> 26      5 47 - 50 #> 27     5+ 50 - 52 #> 28     6- 52 - 57 #> 29      6 57 - 60 #> 30     6+ 60 - 62 #> 31     7- 62 - 67 #> 32      7 67 - 70 #> 33     7+ 70 - 72 #> 34     8- 72 - 77 #> 35      8 77 - 80 #> 36     8+ 80 - 82 #> 37     9- 82 - 87 #> 38      9 87 - 90 #> 39     9+ 90 - 92 #> 40     10 92 - 97 #>  #> * scale 'pr_ab':  #>   Levels  Range #> 1      x  0 - 1 #> 2      1 1 - 50 #>  #> * scale 'ordin.':  #>   Levels   Range #> 1      1   0 - 1 #> 2      2   1 - 2 #> 3      3   2 - 3 #> 4      4   3 - 4 #> 5      5   4 - 8 #> 6      6  8 - 18 #> 7      7 18 - 38 #> 8      8 38 - 68 #> 9      9 68 - 88 #>  #> * scale 'bds':  #>    Levels   Range #> 1       r   0 - 1 #> 2      +r   0 - 1 #> 3      +p   0 - 1 #> 4      +a   0 - 1 #> 5      1p   0 - 1 #> 6      +b   1 - 2 #> 7      1a   1 - 2 #> 8      1b   2 - 3 #> 9      2m   3 - 4 #> 10     2a   4 - 8 #> 11     2b  8 - 18 #> 12     3a 18 - 31 #> 13     3b 31 - 43 #> 14     4a 43 - 56 #> 15     4b 56 - 68 #> 16     5a 68 - 81 #> 17     5b 81 - 93 #>  #> * scale 'doing':  #>    Levels   Range #> 1       r   0 - 1 #> 2       p   0 - 1 #> 3       a   1 - 2 #> 4       m   2 - 4 #> 5      01  4 - 10 #> 6      02 10 - 20 #> 7      03 20 - 30 #> 8      04 30 - 40 #> 9      05 40 - 50 #> 10     06 50 - 60 #> 11     07 60 - 70 #> 12     08 70 - 80 #> 13     09 80 - 90 #> 14     10 90 - 97 #>  #> * scale 'const':  #>   Levels   Range #> 1      r   0 - 2 #> 2      +   2 - 7 #> 3      1  7 - 10 #> 4      2 10 - 30 #> 5      3 30 - 50 #> 6      4 50 - 70 #> 7      5 70 - 90 #>  #> * scale 'domin':  #>    Levels   Range #> 1       + 0 - 0.1 #> 2      11 0 - 0.1 #> 3       1 0.1 - 2 #> 4       2   2 - 3 #> 5       3   3 - 4 #> 6       4  4 - 13 #> 7       5 13 - 23 #> 8       6 23 - 29 #> 9       7 29 - 42 #> 10      8 42 - 63 #> 11      9 63 - 85 #> 12     10 85 - 99 #>  #> * scale 'colin':  #>   Levels   Range #> 1      1   0 - 2 #> 2      2   2 - 4 #> 3      3  4 - 15 #> 4      4 15 - 38 #> 5      5 38 - 63 #> 6      6 63 - 88 #> 7      0 88 - NA #>  #> * scale 'tansly':  #>    Levels   Range #> 1       - 0 - 0.1 #> 2      vr 0 - 0.1 #> 3       r 0.1 - 1 #> 4       s 0.1 - 1 #> 5      ro 0.1 - 1 #> 6      lo 0.1 - 1 #> 7       + 0.1 - 1 #> 8       o   1 - 3 #> 9      lf   1 - 3 #> 10     of   1 - 3 #> 11     oa   3 - 4 #> 12     oc   4 - 5 #> 13     od   5 - 6 #> 14      f   6 - 8 #> 15     la   8 - 9 #> 16     fa   8 - 9 #> 17     fc  9 - 10 #> 18     fd 10 - 12 #> 19      a 12 - 15 #> 20     lc 12 - 15 #> 21     ac 15 - 18 #> 22     ld 18 - 22 #> 23     ad 18 - 22 #> 24      c 22 - 30 #> 25     cd 30 - 40 #> 26     va 30 - 40 #> 27      d 40 - 60 #>  #> * scale 'schltk':  #>   Levels       Range #> 1     .1     0 - 0.1 #> 2      1   0.1 - 1.8 #> 3      5   1.8 - 5.1 #> 4     10  5.1 - 11.3 #> 5     20 11.3 - 20.5 #> 6     30 20.5 - 30.5 #> 7     60 30.5 - 50.5 #> 8     70 50.5 - 70.5 #>   ## Compare the 'Turboveg' version with a vegtable version data(braun_blanquet) summary(Table$br_bl) #> ## Number of cover scales: 1  #>  #> * scale 'br_bl':  #>   Levels   Range #> 1      r   0 - 1 #> 2      x   0 - 1 #> 3      +   1 - 2 #> 4      1   2 - 3 #> 5      2  3 - 13 #> 6      3 13 - 38 #> 7      4 38 - 68 #> 8      5 68 - 88 #>  summary(braun_blanquet$br_bl) #> ## Number of cover scales: 1  #>  #> * scale 'br_bl':  #>   Levels    Range #> 1      r    0 - 1 #> 2      +    0 - 1 #> 3      1    1 - 5 #> 4      2   5 - 25 #> 5      3  25 - 50 #> 6      4  50 - 75 #> 7      5 75 - 100 #>"},{"path":"http://kamapu.github.io/vegtable/reference/update_det.html","id":null,"dir":"Reference","previous_headings":"","what":"Update by determined specimens — update_det","title":"Update by determined specimens — update_det","text":"Reference specimens can integrated slot layers within vegtable object. Updated entries specimens can updated slot samples using function. Alternatively expert opinions can inserted applied case disagreement original records.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/update_det.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update by determined specimens — update_det","text":"","code":"update_det(x, specimens, ...)  # S4 method for vegtable,character update_det(x, specimens, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/update_det.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update by determined specimens — update_det","text":"x vegtable object updated. specimens character vector indicating names tables included slot layers updates applied. Note applied order vector case multiple updates. ... arguments (yet use).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/used_synonyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","title":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","text":"Plots records rather linked plant names plant taxon concepts used_synonyms() lists synonyms linked records vegtable object, including respective accepted names. side, function used_concepts() produces subset taxonomic list embeded slot species including taxonomic concepts linked records slot samples.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/used_synonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","text":"","code":"used_synonyms(x, ...)  # S3 method for vegtable used_synonyms(x, ...)  used_concepts(x, ...)  # S3 method for vegtable used_concepts(x, keep_children = FALSE, keep_parents = FALSE, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/used_synonyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","text":"x vegtable object. ... arguments passed another methods. keep_children logical argument indicating whether children selected taxa included output . argument passed get_children(). keep_parents logical argument indicating whether parents selected taxa included output . argument passed get_parents().","code":""},{"path":"http://kamapu.github.io/vegtable/reference/used_synonyms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","text":"function used_synonyms() returns data frame including following variables: SynonymID ID taxon usage name applied synonym. Synonym synonym . SynonymAuthor Author synonym. TaxonConceptID ID respective taxon concept. AcceptedNameID ID taxon usage name set accepted name taxon concept. AcceptedName respective accepted name. AcceptedNameAuthor author accepted name. function used_concepts() returns taxlist object including taxa occurring plot observations input vegtable object.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/used_synonyms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/used_synonyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve synonyms or taxon concepts used in a data set — used_synonyms","text":"","code":"## Synonyms used in the Kenya_veg Synonyms <- used_synonyms(Kenya_veg) head(Synonyms) #>   SynonymID                                  Synonym   SynonymAuthor #> 1     50168                  Clerodendron johnstonii              NA #> 2     50222 Cyperus sesquiflorus ssp. appendiculatus (K. Schum.) Lye #> 3     50277                           Teclea nobilis          Delile #> 4     50297               Polystichum fuscopaleaceum          Alston #> 5     50304                        Dombeya goetzenii       K. Schum. #> 6     50225                 Solanum sessilistellatum          Bitter #>   TaxonConceptID AcceptedNameID            AcceptedName AcceptedNameAuthor #> 1          50167          50167 Clerodendrum johnstonii              Oliv. #> 2          50221          50221  Cyperus afrosylvestris                Lye #> 3          50276          50276          Vepris nobilis    (Delile) Mziray #> 4          50296          50296   Polystichum discretum    (D. Don) J. Sm. #> 5          50303          50303         Dombeya torrida (J.F. Gmel.) Bamps #> 6          50224          50224  Solanum nigriviolaceum             Bitter  ## Subset species list to used concepts species <- used_concepts(Kenya_veg) Kenya_veg@species #> object size: 554 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 3164  #> number of taxon concepts: 2392  #> trait entries: 102  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 2237  #> concepts with children: 957  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 65 #> number of concepts in level subspecies: 52 #> number of concepts in level species: 1422 #> number of concepts in level complex: 0 #> number of concepts in level genus: 699 #> number of concepts in level family: 154 #>  species #> object size: 395.8 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 2339  #> number of taxon concepts: 1573  #> trait entries: 97  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 514  #> concepts with children: 138  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 65 #> number of concepts in level subspecies: 52 #> number of concepts in level species: 1366 #> number of concepts in level complex: 0 #> number of concepts in level genus: 90 #> number of concepts in level family: 0 #>"},{"path":"http://kamapu.github.io/vegtable/reference/veg_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregating information into a data frame — veg_aggregate","title":"Aggregating information into a data frame — veg_aggregate","text":"Compute summarizing tables vegtable objects. function works similar way crosstable().","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregating information into a data frame — veg_aggregate","text":"","code":"veg_aggregate(object, data, FUN, ...)  # S4 method for formula,vegtable,`function` veg_aggregate(object, data, FUN, use_nas = TRUE, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/veg_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregating information into a data frame — veg_aggregate","text":"object formula indicating variables used summary. crosstable(), keywords \"TaxonName\" \"AcceptedName\" can used retrieve taxonomic names, second set accepted name names considered synonyms. data Either data frame object class vegtable. FUN Function used aggregate values. ... arguments passed function stats::aggregate(). use_nas Logical value indicating whether NA's included categorical variables .","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregating information into a data frame — veg_aggregate","text":"object class data.frame.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/veg_aggregate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregating information into a data frame — veg_aggregate","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregating information into a data frame — veg_aggregate","text":"","code":"## Transform cover to percentage cover veg <- cover_trans(x = Kenya_veg, to = \"cover\")  ## Frequency of taxa per publication atab <- veg_aggregate(object = cover ~ AcceptedName + REFERENCE, data = veg, FUN = length) head(atab) #>           AcceptedName REFERENCE cover #> 1             Abutilon      2331    34 #> 2      Abutilon hirtum      2331    26 #> 3  Abutilon longicuspe      2331     7 #> 4 Abutilon mauritianum      2331    84 #> 5     Abutilon ramosum      2331     3 #> 6               Acacia      2331     1  ## Life form proportions per plot atab <- veg_aggregate(object = cover ~ lf_behn_2018 + ReleveID, data = veg, FUN = sum) head(atab) #>         lf_behn_2018 ReleveID cover #> 1                         358   154 #> 2     climbing_plant      358     1 #> 3 facultative_annual      358     1 #> 4    obligate_annual      358     2 #> 5      reptant_plant      358     1 #> 6      tussock_plant      358     1"},{"path":"http://kamapu.github.io/vegtable/reference/veg_diversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of statistics at plot level — veg_diverstiy","title":"Calculation of statistics at plot level — veg_diverstiy","text":"Calculation diversity statistics plot level allowing customized functions defined foo(x, ...), x vector abundance values. function calls taxa2samples() derive taxa taxon usage names slot samples multiple records species single plot merged stats::aggregate. functions shannon(), evenness(), dominance() calculate diversity index Shannon, evenness, dominance (1 - evenness), respectively. Dominance complementary value evenness (.e. 1 - evenness). function simpson() calculates Simpson's index using alternative vegetation plot observations. function richness() counts number taxa per plot can used alternative vegtable::count_taxa.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_diversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of statistics at plot level — veg_diverstiy","text":"","code":"shannon(x, na.rm = TRUE, ...)  evenness(x, ...)  dominance(x, ...)  simpson(x, na.rm = TRUE, ...)  richness(x, na.rm = TRUE, ...)  veg_diversity(object, ...)  # S3 method for vegtable veg_diversity(   object,   weight,   FUN = shannon,   aggr_fun = mean,   arg_fun = list(),   var_name,   in_header = TRUE,   ... )"},{"path":"http://kamapu.github.io/vegtable/reference/veg_diversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of statistics at plot level — veg_diverstiy","text":"x numeric vector containing abundance single species. na.rm logical value indicating whether NA values removed abundance vector . ... arguments passed among methods. 'evenness()' 'dominance()', arguments passed 'shannon()'. 'veg_diversity()', arguments passed aggregate() (actually 'FUN'). object vegtable object. weight character value indicating name column slot samples used species abundance. FUN function used calculate diversity index. aggr_fun function used aggregate abundance values multiple records taxon plot observation. Average value used default. arg_fun named list parameters arguments passed taxa2samples(), retrieve respective taxon concept taxon usage name can used merge taxa determined taxonomic rank, instance merge sub-specific taxa respective species (.e. 'merge_to = \"species\"'). var_name character value used name calculated index. missing, name function used. in_header logical value indicating whether results included variables slot header input object. 'in_header = TRUE', may assign result function input object.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_diversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of statistics at plot level — veg_diverstiy","text":"Functions shannon(), evenness(), dominance(), simpson(), richness() return numeric value (calculated index). Funtion veg_diversity() produce either data frame calculated values per plot observation (option 'in_header = FALSE') vegtable object calculated values inserted slot header (option 'in_header = TRUE').","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_diversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of statistics at plot level — veg_diverstiy","text":"","code":"## Compare Evenness with Shannon index Kenya_veg <- cover_trans(x = Kenya_veg, to = \"cover\") Kenya_veg <- veg_diversity(object = Kenya_veg, weight = \"cover\") Kenya_veg <- veg_diversity(object = Kenya_veg, weight = \"cover\", FUN = evenness)  with(Kenya_veg@header, plot(shannon, evenness))"},{"path":"http://kamapu.github.io/vegtable/reference/veg_relation.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve or replace relations in vegtable objects — veg_relation","title":"Retrieve or replace relations in vegtable objects — veg_relation","text":"Tables providing information levels categorical variables header called popups Turboveg databases relations vegtable objects. variables converted factors slot header according levels sorting respective relation.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_relation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve or replace relations in vegtable objects — veg_relation","text":"","code":"veg_relation(vegtable, relation, ...)  # S4 method for vegtable,character veg_relation(vegtable, relation, match_header = FALSE, ...)  veg_relation(vegtable) <- value  # S4 method for vegtable,data.frame veg_relation(vegtable) <- value"},{"path":"http://kamapu.github.io/vegtable/reference/veg_relation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve or replace relations in vegtable objects — veg_relation","text":"vegtable object class vegtable. relation character value indicating relation table retrieved replaced. ... arguments passed among methods. match_header logical vector, whether levels occurring slot header considered . value data frame containing new veg_relation.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_relation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve or replace relations in vegtable objects — veg_relation","text":"function retrieves object class data.frame. replacement method, object class vegtable, including value slot relations.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_relation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve or replace relations in vegtable objects — veg_relation","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/veg_relation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve or replace relations in vegtable objects — veg_relation","text":"","code":"## overview of references veg_relation(Kenya_veg, \"REFERENCE\") #>    REFERENCE                     AUTHOR YEAR #> 1       2789           Alvarez M et al. 2012 #> 2       3782                  Alvarez M 2016 #> 3       3489         Cahngwony K et al. 2015 #> 4       3783                  Alvarez M 2013 #> 5       2974                Bussmann RW 2002 #> 6       3011                  Schmitt K 1991 #> 7       3012                Bussmann RW 1994 #> 8       3784                  Alvarez M 2011 #> 9       2331                  Bronner G 1990 #> 10      3785                  Alvarez M 2014 #> 11      3786                     Behn K 2013 #> 12      3506          Fujiwara K et al. 2014 #> 13      3545                 Eisering M 2012 #> 14      3388                    Taton A 1949 #> 15      2797               Ngome AF al. 2012 #> 16      2396 Schultka W and Cornelius R 1997 #> 17      3352 Ayichedehou M and Lejoly J 2000 #> 18      3460             de Bock et al. 2009 #> 19      3239               Guyot et al. 1994 #> 20      3203                    Taton A 1948 #> 21      3211    Szafranski F et Apema K 1983 #> 22      3212        Szafranski F et al. 1983 #> 23      3158               Mullenders W 1953 #> 24      3350               Masens D-MYB 2000 #> 25      3347    Lejoly J and Lisowski S 2000 #> 26      3245         de Foucault et al. 1999 #> 27      3379           Mosango M et al. 2001 #> 28      3562        Abyot Dibaba et al. 2014 #> 29      3589              Zerihun Woldu 1986 #> 30      3464    Furness HD and Breen CM 1980 #>                                                                                                                                                                                                     TITLE #> 1                                                                                                                      Floristic classification of the vegetation in small wetlands of Kenya and Tanzania #> 2                                                          Syntaxonomic classification of aquatic and semi-aquatic vegetation in two East African sites: preliminary results based on Cocktail algorithms #> 3                                                                             Biomass and quality changes of forages along land use and soil type gradients in the riparian zone of Lake Naivasha, Kenya. #> 4                                                                                                                                                 Relv\\u0082s collected in Kihoto (Lake Naivasha, Kenya). #> 5                                                                                                              Islands in the desert - forest vegetation of Kenya's smaller mountains and highland areas. #> 6                                                                                                                                                     The vegetation of the Aberdare National Park Kenya. #> 7                                                                                   The forests of Mount Kenya - vegetation, ecology, destruction and management of a tropical mountain forest ecosystem. #> 8                                                                                                                                          Relev\\u0082s collected in the Churo-Laikipia transect (Kenya). #> 9                                                                                                                              Vegetation and land use in the Mathews Range area, Samburu-District, Kenya #> 10                                                                                                                                                   Relev\\u0082s collected in Marigat and Churo (Kenya). #> 11                                                                                                                                                                                        GlobE Typology. #> 12                                                                                                                                   Forest types and biodiversity around the Great Rift Valley in Kenya. #> 13                                                                          Forest age, habitat disturbance and vegetation composition as potential determinants of Afrotropical geometrid moth diversity #> 14                                                                                                        Les principales associations herbeuses de la R\\u0082gion de Nioka et leur valeur agrostologique #> 15                                                                                              Management options and soil types differentially affect weeds in maize fields of Kakamega, Western Kenya. #> 16                                                                                                               Vegetation structure of a heavily grazed range in northern Kenya: tree and shrub canopy. #> 17                                                                                                        \\u0090tude phytosociologique des friches sur vertisols dans les environs d'Abomey (B\\u0082nin). #> 18                                                                                                      Ecohydrology of a seasonal wetland in the Rift Valley: ecological characterisation of Lake Solai. #> 19                                                                                         La v\\u0082g\\u0082tation des zones inond\\u0082es du Sud du Togo et son \\u0082tat actuel sous l'emprise humaine. #> 20                                                                                                                                          La colonisation des roches granitiques de la Region de Nioka. #> 21                                              Contribution \\u0085 la connaissance des groupements v\\u0082g\\u0082taux aquatiques et semi-aquatiques dans les environs de Kisangani (Haut-Za\\u008bre). I. #> 22 Contribution \\u0085 la connaissance des groupemente v\\u0082g\\u0082taux aquatiques et semi-aquatiques dans les environs de Kisangani (Haut-Za\\u008bre). II. L'association \\u0085 Eleocharis acutangula. #> 23                                                                                       Contribution a l'\\u0082tude des groupements v\\u0082g\\u0082taux de la contr\\u0082e de Goma-Kisenyi (Kivu-Ruanda). #> 24                                                   La prairie aquatique \\u0085 Salvinia nymphellula et Limnophila ceratophylloides dans la r\\u0082gion de Kikwit (Bandundu, R\\u0082p. D\\u0082m. Congo). #> 25                                                                                    La v\\u0082g\\u0082tation des clairi\\u008ares sur sol hydromorphe dans le Parc National d'Odzala (Congo-Brazzaville). #> 26                                                                                                   Contribution \\u0085 l'\\u0082tude phytosociologique des v\\u0082g\\u0082tations inondables du Sud Togo. #> 27                                                                                                                              Talinetum paniculatum, a new synanthropic association of tropical Africa. #> 28                                                             Diversity, structure and regeneration status of the woodland and riverine vegetation of Sire Beggo in Gololcha District, Eastern Ethiopia. #> 29                                                                                                                                       Grassland communities on the central plateau of Shewa, Ethiopia. #> 30                                                                                                                            The vegetation of seasonally flooded areas of the Pongolo River floodplain. #>                                                                         PUBLISHED #> 1                                              Biodiversity and Ecology 4: 63-76. #> 2                                                     Phytocoenologia (in press). #> 3                                              Ecological Indicators 49: 169-177. #> 4                                                                    Unpublished. #> 5                              Journal of East African Natural History 91: 27-79. #> 6                                                  Hochgebigsforschung 8: 259 pp. #> 7                                                                            <NA> #> 8                                                                    Unpublished. #> 9                                                    Dissertationes Botanicae 160 #> 10                                                                   Unpublished. #> 11                                                                   Unpublished. #> 12                                              Contributii Botanice 49: 143-178. #> 13                                                            ETH (Master Thesis) #> 14             Bulletin Agricole du Congo Belge et du Ruanda-Urundi 40: 1884-1900 #> 15                    Journal of Agricultural Science and Technology A 2: 104-114 #> 16                                       Journal of Arid Environments 36: 291-306 #> 17                                      Colloques Phytosociologiques 27: 465-477. #> 18                                        African Journal of Ecology 47: 289-298. #> 19                                                    Biogeographica 70: 161-182. #> 20                                                          Vegetatio 1: 317-332. #> 21  Bulletin de la Soci\\u0082t\\u0082 Royale de Botanique de Belgique 116: 93-106. #> 22 Bulletin de la Soci\\u0082t\\u0082 Royale de Botanique de Belgique 116: 189-194. #> 23                                                            Vegetatio 4: 73-83. #> 24                                      Colloques Phytosociologiques 27: 429-442. #> 25                                      Colloques Phytosociologiques 27: 371-382. #> 26                                        Belgian Journal of Botany 132: 141-152. #> 27                                           Polish Botanical Journal 46: 99-107. #> 28                                  Momona Ethiopian Journal of Science 6: 70-96. #> 29                                                            Vegetatio 67: 3-16. #> 30                                                          Bothalia 13: 217-231."},{"path":"http://kamapu.github.io/vegtable/reference/vegtable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class vegtable. — vegtable-class","title":"Class vegtable. — vegtable-class","text":"Class holding vegetation-plot data sets. Designed content information stored Turboveg databases just one object. class designed include information relevés, header data species just one object. Objects can created calls form new(\"vegtable\", ...).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/vegtable-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class vegtable. — vegtable-class","text":"description named character vector containing metadata. samples data frame samples list. header data frame plots data. species Species list taxlist object. layers list including strata within samples data frames. relations list including popup lists data frames. coverconvert scale conversion object class coverconvert. syntax list including syntaxonomic lists either data frames taxlist objects.","code":""},{"path":[]},{"path":"http://kamapu.github.io/vegtable/reference/vegtable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class vegtable. — vegtable-class","text":"","code":"showClass(\"vegtable\") #> Class \"vegtable\" [package \"vegtable\"] #>  #> Slots: #>                                                                         #> Name:   description      samples       layers       header      species #> Class:    character   data.frame         list   data.frame      taxlist #>                                               #> Name:     relations coverconvert       syntax #> Class:         list coverconvert         list"},{"path":"http://kamapu.github.io/vegtable/reference/vegtable_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"General statistics from vegtable objects — vegtable_stat","title":"General statistics from vegtable objects — vegtable_stat","text":"function calculates general statistics local Turboveg databases required GIVD (Global Index Vegetation-Plot Databases, https://www.givd.info). function based script delivered GIVD summarising statistics required descriptions databases (see meta data page Global Index Vegetation-Plot Databases).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/vegtable_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General statistics from vegtable objects — vegtable_stat","text":"","code":"vegtable_stat(vegtable, ...)  # S3 method for vegtable vegtable_stat(vegtable, ...)"},{"path":"http://kamapu.github.io/vegtable/reference/vegtable_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General statistics from vegtable objects — vegtable_stat","text":"vegtable object class vegtable. ... arguments passed among methods.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/vegtable_stat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"General statistics from vegtable objects — vegtable_stat","text":"GIVD. Adapted Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/vegtable_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General statistics from vegtable objects — vegtable_stat","text":"","code":"## Statistics for GIVD vegtable_stat(Kenya_veg) #> ## Metadata  #>    db_name: Sweadataveg #>    sp_list: Easplist #>    dictionary: Swea #>    object size: 9501 Kb  #>    validity: TRUE  #>  #> ## Content  #>    number of plots: 1946  #>    plots with records: 1946  #>    variables in header: 34  #>    number of relations: 3  #>  #> ## Taxonomic List  #>    taxon names: 3164  #>    taxon concepts: 2392  #>    validity: TRUE  #>  #> REFERENCES  #> Primary references: 5 #>  #> ## AREA  #> Area range (m^2): 150 - 1750 #> <1 m^2: 0% #> 1-<10 m^2: 0% #> 10-<100 m^2: 0% #> 100-<1000 m^2: 2% #> 1000-<10000 m^2: 1% #> >=10000 m^2: 0% #> unknow: 97% #>  #> ## TIME  #> oldest: 1983 - youngest: 2014 #> <=1919: 0% #> 1920-1929: 0% #> 1930-1939: 0% #> 1940-1949: 0% #> 1950-1959: 0% #> 1960-1969: 0% #> 1970-1979: 0% #> 1980-1989: 36% #> 1990-1999: 31% #> 2000-2009: 2% #> 2010-2019: 1% #> unknow: 30% #>  #> ## DISTRIBUTION  #> KE: 100% #>  #> ## PERFORMANCE  #> 01: 83% #> 02: 17% #> 03: 0% #> 04: 0% #> 05: 0% #> 06: 0% #> 07: 0% #> 08: 0% #> 09: 0% #> 10: 0% #> 11: 0% #> 12: 0% #>"},{"path":"http://kamapu.github.io/vegtable/reference/write_juice.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting tables for Juice — write_juice","title":"Exporting tables for Juice — write_juice","text":"function produce txt files inport formats Juice (https://www.sci.muni.cz/botany/juice/). function produces two output files imported Juice file: vegetation table produced crosstable() header table. tables share file name plus suffix (table vegetation table header header). import Juice, go menu File -> Import -> Table -> Spreadsheet File (e.g. EXCEL Table) follow wizard. forget select proper settings wizard: 1) 'Character delimiting columns: Comma' (default argument values). 2) 'Use second column layer information: Unchecked'. 3) 'Cover values: Percentage Values'. import header table need go menu File -> Import -> Header Data -> Comma Delimited File. header (see Value), first column (Table number) corresponds plot number assigned Juice import, column (Releve number) number originally assigned plot (e.g. Turboveg ID).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/write_juice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting tables for Juice — write_juice","text":"","code":"write_juice(data, file, formula, ...)  # S4 method for vegtable,character,formula write_juice(   data,   file,   formula,   FUN,   db_name = \"Plot Observations\",   header,   coords,   sep = \",\",   ... )  read_juice(file, encoding = \"LATIN-1\", sep = \";\", na = \"\", ...)"},{"path":"http://kamapu.github.io/vegtable/reference/write_juice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting tables for Juice — write_juice","text":"data object class vegtable. file Character value indicating name output files (without file extension). formula formula passed crosstable(). ... arguments. write_juice() passes function crosstable(), read_juice() passes arguments readLines(). FUN Funtion passed crosstable(). db_name Name data set displayed inport wizard. header Variables header exported. coords Names coordinate variables header data. sep Separator used split rows columns. encoding Argument passed readLines. na Character used available values.","code":""},{"path":"http://kamapu.github.io/vegtable/reference/write_juice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exporting tables for Juice — write_juice","text":"read_juice(), list two elements: data frame species plot (cross_table), data frame header data (header).","code":""},{"path":"http://kamapu.github.io/vegtable/reference/write_juice.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exporting tables for Juice — write_juice","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"http://kamapu.github.io/vegtable/reference/write_juice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exporting tables for Juice — write_juice","text":"","code":"## Subset and transform cover values to percentage vegetation <- Kenya_veg[1:20, ] vegetation <- cover_trans(x = vegetation, to = \"cover_percent\", rule = \"middle\")  ## Write in tempdir write_juice(data = vegetation, file = file.path(tempdir(), \"SWEA\"),     formula = cover_percent ~ ReleveID + AcceptedName, FUN = mean,     header = c(\"ReleveID\", \"COMM_TYPE\")) #> Processing header data... #> Processing vegetation table... #> DONE! #>  #> Data set name: Plot Observations #> Number of observations: 20 #> Recorded species: 104 ## Installed 'Juice' version of 'Wetlands_veg' Veg <- file.path(path.package(\"vegtable\"), \"juice\", \"Wetlands_juice.txt\") Veg <- read_juice(Veg)  summary(Veg) #>             Length Class      Mode #> cross_table 88     data.frame list #> header      24     data.frame list"},{"path":[]},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-9","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.9","text":"Function count_taxa() also inserts results slot relations. New arguments 'level' 'include_lower' function crosstable() enable selection /merging taxon ranks cross tables.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-018","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.8","title":"vegtable 0.1.8","text":"CRAN release: 2023-03-14","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-8","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.8","text":"New function veg_diversity() functions calculating diversity indices: shannon(), evenness(), dominance(), simpson(), richness(). New function new_relation() inserting new relations vegtable objects. function internally called veg_relation(). New function df2coverconvert() coercing data frames lists coverconvert objects.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-8","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.8","text":"Slot relations may deal element can coerced data.frame. elements slot syntax class taxlist Parameter in_header defined several functions set in_header = TRUE. Former method ‘aggregate()’ now defined function ‘veg_aggregate()’. Deprecated functions: match_names(), merge_taxa(). functions now exclusive objects class taxlist. Method names() vegtable objects retrieve list names respective slots. New coercion methods including functions () <-. Functions trait_proportion() trait_stats() also adding results slot relations.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"bug-fixes-0-1-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"vegtable 0.1.8","text":"issue solved function taxa2samples() setting argument parameter 'merge_to', properly working cases.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-017","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.7","title":"vegtable 0.1.7","text":"CRAN release: 2021-10-13","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-7","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.7","text":"New function used_concepts() extract taxon concepts occurring plot observations. New function cover_trans() replacement transform() New slot syntax vegtable objects. show() print() methods objects vegtable, coverconvert, shaker.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-7","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.7","text":"function make_cocktail(), names syntaxa allowed start numerical values. Function write_juice() includes messages working metadata cross-check importing Juice. New arguments function taxa2samples() setting levels included output object (include_levels) remove taxa without levels (na.rm). Application subset() extended content slot relations. Function vegtable2kml() deprecated resolve dependencies GIS packages associated package plotKML. Validity checks allow plots slot header without records samples. Function summary() also providing number plots records. Function transform() deprecated replaced cover_trans().","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"bug-fixes-0-1-7","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"vegtable 0.1.7","text":"Files written write_juice() Linux now readable Windows. clean() objects entries resulted invalid objects. Bug count_taxa() aggregating ranks missing records lower taxa.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-016","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.6","title":"vegtable 0.1.6","text":"CRAN release: 2020-04-30","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-6","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.6","text":"Documentation implemented roxygen2. New argument preserve_ids function add_releves().","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"bug-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"vegtable 0.1.6","text":"Function count_taxa() adapted current package taxlist.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-015","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.5","title":"vegtable 0.1.5","text":"CRAN release: 2020-01-13","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.5","text":"New function relation2header(). New functions trait_stats() trait_proportion().","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.5","text":"New argument add_traits function taxa2samples(). Output count_taxa(), formula-method, indicates counted rank output. Adjusted settings function write_juice() general cases. Argument as_matrix function crosstable() alternating matrix data.frame output. New arguments suffix in_header function count_taxa().","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"bug-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"vegtable 0.1.5","text":"Function taxa2samples() properly working taxlist taxon concepts without level information.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-014","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.4","title":"vegtable 0.1.4","text":"CRAN release: 2019-01-22","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-4","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.4","text":"New data set aspect_conv. New function taxa2samples() changing record names respective accepted names. Function count_taxa() implemented vegtable objects.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.4","text":"Updated data set Kenya_veg Including hierarchical ranks.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"bugs-0-1-4","dir":"Changelog","previous_headings":"","what":"Bugs","title":"vegtable 0.1.4","text":"Function cross2db working properly tables one column","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-013","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.3","title":"vegtable 0.1.3","text":"CRAN release: 2018-06-29","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.3","text":"method numeric values function transform().","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-012","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.2","title":"vegtable 0.1.2","text":"CRAN release: 2018-05-10","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.2","text":"File inst/ChangeLog replaced NEWS.md. Method match_names() vegtable objects. New method layers2samples(). New method add_releves(), adding releves data frames vegtable objects.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.2","text":"column LayerID prototype vegtable objects. NA values allowed layers slot samples. Layers restricted single plots. Orphaned entries slot layers deleted function clean(). Argument match_header included function veg_relation(). Validity check accepting NA values TaxonUsageID slot samples. Validity check tests also values relations matching header respective relation.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-011","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.1","title":"vegtable 0.1.1","text":"CRAN release: 2018-02-08","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.1","text":"method function aggregate. Slot layers added vegtable objects.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"improvements-0-1-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"vegtable 0.1.1","text":"Method subset working similarly taxlist::subset. Function clean modify slot species. Function crosstable access also taxon traits. New argument use_nas function crosstable.","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"vegtable-010","dir":"Changelog","previous_headings":"","what":"vegtable 0.1.0","title":"vegtable 0.1.0","text":"CRAN release: 2017-08-08","code":""},{"path":"http://kamapu.github.io/vegtable/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"vegtable 0.1.0","text":"First delivery CRAN.","code":""}]
